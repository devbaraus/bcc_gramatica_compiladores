Terminals unused in grammar

   LIN
   CBLOCK
   CINLINE
   '='


State 9 conflicts: 1 shift/reduce
State 11 conflicts: 6 shift/reduce
State 25 conflicts: 1 shift/reduce
State 36 conflicts: 1 shift/reduce


Grammar

    0 $accept: goal $end

    1 goal: program
    2     | %empty

    3 program: statement semicolon_not
    4        | statement semicolon_not program

    5 semicolon_not: %empty
    6              | SEMICOLON

    7 statement: expression
    8          | declarations
    9          | assigns
   10          | conditional
   11          | loop
   12          | IDENTIFIER '(' funcArgsNull ')'
   13          | flow

   14 flow: FRETURN
   15     | FRETURN expression
   16     | FBREAK
   17     | FCONTINUE

   18 $@1: %empty

   19 loop: LFOR '(' declarations SEMICOLON expression SEMICOLON assigns ')' '{' $@1 program '}'

   20 $@2: %empty

   21 loop: LFOR '(' DLET IDENTIFIER LOF IDENTIFIER ')' '{' $@2 program '}'

   22 $@3: %empty

   23 loop: LWHILE '(' expression ')' '{' $@3 program '}'

   24 declarations: DLET IDENTIFIER
   25             | DVAR IDENTIFIER
   26             | DLET IDENTIFIER ASSGNOP expression
   27             | DVAR IDENTIFIER ASSGNOP expression
   28             | DCONST IDENTIFIER ASSGNOP expression

   29 $@4: %empty

   30 declarations: DCONST IDENTIFIER ASSGNOP $@4 anonymFunction

   31 $@5: %empty

   32 $@6: %empty

   33 declarations: DFUNC IDENTIFIER '(' $@5 funcParamsNull ')' '{' $@6 program '}'

   34 assigns: IDENTIFIER ASSGNOP expression
   35        | IDENTIFIER '[' arr_values ']' ASSGNOP expression

   36 $@7: %empty

   37 $@8: %empty

   38 anonymFunction: DFUNC '(' $@7 funcParamsNull ')' '{' $@8 program '}'

   39 $@9: %empty

   40 anonymFunction: '(' funcParamsNull ')' DAFUNC '{' $@9 program '}'

   41 funcParamsNull: %empty
   42               | funcParams

   43 funcParams: IDENTIFIER
   44           | assigns

   45 $@10: %empty

   46 $@11: %empty

   47 funcParams: IDENTIFIER $@10 ',' $@11 funcParams

   48 $@12: %empty

   49 $@13: %empty

   50 funcParams: assigns $@12 ',' $@13 funcParams

   51 funcArgsNull: %empty
   52             | expression
   53             | expression ',' funcArgsNull
   54             | ',' funcArgsNull

   55 $@14: %empty

   56 $@15: %empty

   57 conditional: CIF '(' expression ')' '{' $@14 program $@15 '}' conditionalElse

   58 conditionalElse: %empty

   59 $@16: %empty

   60 $@17: %empty

   61 conditionalElse: CELSE '{' $@16 program $@17 '}'

   62 $@18: %empty

   63 $@19: %empty

   64 conditionalElse: CELSE CIF '(' expression ')' '{' $@18 program $@19 '}' conditionalElse

   65 arr_expression: '[' ']'
   66               | '[' arr_values ']'

   67 arr_values: expression
   68           | expression ',' arr_values

   69 arr_index: IDENTIFIER '[' arr_values ']'
   70          | arr_expression '[' arr_values ']'

   71 expression: VSTR
   72           | VBOOL
   73           | VINT
   74           | VFLOAT
   75           | IDENTIFIER
   76           | arr_index
   77           | arr_expression
   78           | expression NULLCOALESCING expression
   79           | expression '?' expression ':' expression
   80           | expression LOGAND expression
   81           | expression LOGOR expression
   82           | expression EXPGT expression
   83           | expression EXPLT expression
   84           | expression EXPEQ expression
   85           | expression EXPDF expression
   86           | expression '<' expression
   87           | expression '>' expression
   88           | expression '+' expression
   89           | expression '-' expression
   90           | expression '*' expression
   91           | expression '/' expression


Terminals, with rules where they appear

$end (0) 0
'(' (40) 12 19 21 23 33 38 40 57 64
')' (41) 12 19 21 23 33 38 40 57 64
'*' (42) 90
'+' (43) 88
',' (44) 47 50 53 54 68
'-' (45) 89
'/' (47) 91
':' (58) 79
'<' (60) 86
'=' (61)
'>' (62) 87
'?' (63) 79
'[' (91) 35 65 66 69 70
']' (93) 35 65 66 69 70
'{' (123) 19 21 23 33 38 40 57 61 64
'}' (125) 19 21 23 33 38 40 57 61 64
error (256)
DLET (258) 21 24 26
DCONST (259) 28 30
DVAR (260) 25 27
DFUNC (261) 33 38
DAFUNC (262) 40
VSTR (263) 71
VINT (264) 73
VBOOL (265) 72
VFLOAT (266) 74
IDENTIFIER (267) 12 21 24 25 26 27 28 30 33 34 35 43 47 69 75
CIF (268) 57 64
CELSE (269) 61 64
ASSGNOP (270) 26 27 28 30 34 35
EXPGT (271) 82
EXPLT (272) 83
EXPEQ (273) 84
EXPDF (274) 85
NULLCOALESCING (275) 78
LOGOR (276) 81
LOGAND (277) 80
FRETURN (278) 14 15
FBREAK (279) 16
FCONTINUE (280) 17
SEMICOLON (281) 6 19
LFOR (282) 19 21
LOF (283) 21
LIN (284)
LWHILE (285) 23
CBLOCK (286)
CINLINE (287)


Nonterminals, with rules where they appear

$accept (49)
    on left: 0
goal (50)
    on left: 1 2, on right: 0
program (51)
    on left: 3 4, on right: 1 4 19 21 23 33 38 40 57 61 64
semicolon_not (52)
    on left: 5 6, on right: 3 4
statement (53)
    on left: 7 8 9 10 11 12 13, on right: 3 4
flow (54)
    on left: 14 15 16 17, on right: 13
loop (55)
    on left: 19 21 23, on right: 11
$@1 (56)
    on left: 18, on right: 19
$@2 (57)
    on left: 20, on right: 21
$@3 (58)
    on left: 22, on right: 23
declarations (59)
    on left: 24 25 26 27 28 30 33, on right: 8 19
$@4 (60)
    on left: 29, on right: 30
$@5 (61)
    on left: 31, on right: 33
$@6 (62)
    on left: 32, on right: 33
assigns (63)
    on left: 34 35, on right: 9 19 44 50
anonymFunction (64)
    on left: 38 40, on right: 30
$@7 (65)
    on left: 36, on right: 38
$@8 (66)
    on left: 37, on right: 38
$@9 (67)
    on left: 39, on right: 40
funcParamsNull (68)
    on left: 41 42, on right: 33 38 40
funcParams (69)
    on left: 43 44 47 50, on right: 42 47 50
$@10 (70)
    on left: 45, on right: 47
$@11 (71)
    on left: 46, on right: 47
$@12 (72)
    on left: 48, on right: 50
$@13 (73)
    on left: 49, on right: 50
funcArgsNull (74)
    on left: 51 52 53 54, on right: 12 53 54
conditional (75)
    on left: 57, on right: 10
$@14 (76)
    on left: 55, on right: 57
$@15 (77)
    on left: 56, on right: 57
conditionalElse (78)
    on left: 58 61 64, on right: 57 64
$@16 (79)
    on left: 59, on right: 61
$@17 (80)
    on left: 60, on right: 61
$@18 (81)
    on left: 62, on right: 64
$@19 (82)
    on left: 63, on right: 64
arr_expression (83)
    on left: 65 66, on right: 70 77
arr_values (84)
    on left: 67 68, on right: 35 66 68 69 70
arr_index (85)
    on left: 69 70, on right: 76
expression (86)
    on left: 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88
    89 90 91, on right: 7 15 19 23 26 27 28 34 35 52 53 57 64 67 68
    78 79 80 81 82 83 84 85 86 87 88 89 90 91


State 0

    0 $accept: . goal $end

    DLET        shift, and go to state 1
    DCONST      shift, and go to state 2
    DVAR        shift, and go to state 3
    DFUNC       shift, and go to state 4
    VSTR        shift, and go to state 5
    VINT        shift, and go to state 6
    VBOOL       shift, and go to state 7
    VFLOAT      shift, and go to state 8
    IDENTIFIER  shift, and go to state 9
    CIF         shift, and go to state 10
    FRETURN     shift, and go to state 11
    FBREAK      shift, and go to state 12
    FCONTINUE   shift, and go to state 13
    LFOR        shift, and go to state 14
    LWHILE      shift, and go to state 15
    '['         shift, and go to state 16

    $default  reduce using rule 2 (goal)

    goal            go to state 17
    program         go to state 18
    statement       go to state 19
    flow            go to state 20
    loop            go to state 21
    declarations    go to state 22
    assigns         go to state 23
    conditional     go to state 24
    arr_expression  go to state 25
    arr_index       go to state 26
    expression      go to state 27


State 1

   24 declarations: DLET . IDENTIFIER
   26             | DLET . IDENTIFIER ASSGNOP expression

    IDENTIFIER  shift, and go to state 28


State 2

   28 declarations: DCONST . IDENTIFIER ASSGNOP expression
   30             | DCONST . IDENTIFIER ASSGNOP $@4 anonymFunction

    IDENTIFIER  shift, and go to state 29


State 3

   25 declarations: DVAR . IDENTIFIER
   27             | DVAR . IDENTIFIER ASSGNOP expression

    IDENTIFIER  shift, and go to state 30


State 4

   33 declarations: DFUNC . IDENTIFIER '(' $@5 funcParamsNull ')' '{' $@6 program '}'

    IDENTIFIER  shift, and go to state 31


State 5

   71 expression: VSTR .

    $default  reduce using rule 71 (expression)


State 6

   73 expression: VINT .

    $default  reduce using rule 73 (expression)


State 7

   72 expression: VBOOL .

    $default  reduce using rule 72 (expression)


State 8

   74 expression: VFLOAT .

    $default  reduce using rule 74 (expression)


State 9

   12 statement: IDENTIFIER . '(' funcArgsNull ')'
   34 assigns: IDENTIFIER . ASSGNOP expression
   35        | IDENTIFIER . '[' arr_values ']' ASSGNOP expression
   69 arr_index: IDENTIFIER . '[' arr_values ']'
   75 expression: IDENTIFIER .

    ASSGNOP  shift, and go to state 32
    '['      shift, and go to state 33
    '('      shift, and go to state 34

    '['       [reduce using rule 75 (expression)]
    $default  reduce using rule 75 (expression)


State 10

   57 conditional: CIF . '(' expression ')' '{' $@14 program $@15 '}' conditionalElse

    '('  shift, and go to state 35


State 11

   14 flow: FRETURN .
   15     | FRETURN . expression

    VSTR        shift, and go to state 5
    VINT        shift, and go to state 6
    VBOOL       shift, and go to state 7
    VFLOAT      shift, and go to state 8
    IDENTIFIER  shift, and go to state 36
    '['         shift, and go to state 16

    VSTR        [reduce using rule 14 (flow)]
    VINT        [reduce using rule 14 (flow)]
    VBOOL       [reduce using rule 14 (flow)]
    VFLOAT      [reduce using rule 14 (flow)]
    IDENTIFIER  [reduce using rule 14 (flow)]
    '['         [reduce using rule 14 (flow)]
    $default    reduce using rule 14 (flow)

    arr_expression  go to state 25
    arr_index       go to state 26
    expression      go to state 37


State 12

   16 flow: FBREAK .

    $default  reduce using rule 16 (flow)


State 13

   17 flow: FCONTINUE .

    $default  reduce using rule 17 (flow)


State 14

   19 loop: LFOR . '(' declarations SEMICOLON expression SEMICOLON assigns ')' '{' $@1 program '}'
   21     | LFOR . '(' DLET IDENTIFIER LOF IDENTIFIER ')' '{' $@2 program '}'

    '('  shift, and go to state 38


State 15

   23 loop: LWHILE . '(' expression ')' '{' $@3 program '}'

    '('  shift, and go to state 39


State 16

   65 arr_expression: '[' . ']'
   66               | '[' . arr_values ']'

    VSTR        shift, and go to state 5
    VINT        shift, and go to state 6
    VBOOL       shift, and go to state 7
    VFLOAT      shift, and go to state 8
    IDENTIFIER  shift, and go to state 36
    '['         shift, and go to state 16
    ']'         shift, and go to state 40

    arr_expression  go to state 25
    arr_values      go to state 41
    arr_index       go to state 26
    expression      go to state 42


State 17

    0 $accept: goal . $end

    $end  shift, and go to state 43


State 18

    1 goal: program .

    $default  reduce using rule 1 (goal)


State 19

    3 program: statement . semicolon_not
    4        | statement . semicolon_not program

    SEMICOLON  shift, and go to state 44

    $default  reduce using rule 5 (semicolon_not)

    semicolon_not  go to state 45


State 20

   13 statement: flow .

    $default  reduce using rule 13 (statement)


State 21

   11 statement: loop .

    $default  reduce using rule 11 (statement)


State 22

    8 statement: declarations .

    $default  reduce using rule 8 (statement)


State 23

    9 statement: assigns .

    $default  reduce using rule 9 (statement)


State 24

   10 statement: conditional .

    $default  reduce using rule 10 (statement)


State 25

   70 arr_index: arr_expression . '[' arr_values ']'
   77 expression: arr_expression .

    '['  shift, and go to state 46

    '['       [reduce using rule 77 (expression)]
    $default  reduce using rule 77 (expression)


State 26

   76 expression: arr_index .

    $default  reduce using rule 76 (expression)


State 27

    7 statement: expression .
   78 expression: expression . NULLCOALESCING expression
   79           | expression . '?' expression ':' expression
   80           | expression . LOGAND expression
   81           | expression . LOGOR expression
   82           | expression . EXPGT expression
   83           | expression . EXPLT expression
   84           | expression . EXPEQ expression
   85           | expression . EXPDF expression
   86           | expression . '<' expression
   87           | expression . '>' expression
   88           | expression . '+' expression
   89           | expression . '-' expression
   90           | expression . '*' expression
   91           | expression . '/' expression

    EXPGT           shift, and go to state 47
    EXPLT           shift, and go to state 48
    EXPEQ           shift, and go to state 49
    EXPDF           shift, and go to state 50
    NULLCOALESCING  shift, and go to state 51
    LOGOR           shift, and go to state 52
    LOGAND          shift, and go to state 53
    '?'             shift, and go to state 54
    '>'             shift, and go to state 55
    '<'             shift, and go to state 56
    '-'             shift, and go to state 57
    '+'             shift, and go to state 58
    '*'             shift, and go to state 59
    '/'             shift, and go to state 60

    $default  reduce using rule 7 (statement)


State 28

   24 declarations: DLET IDENTIFIER .
   26             | DLET IDENTIFIER . ASSGNOP expression

    ASSGNOP  shift, and go to state 61

    $default  reduce using rule 24 (declarations)


State 29

   28 declarations: DCONST IDENTIFIER . ASSGNOP expression
   30             | DCONST IDENTIFIER . ASSGNOP $@4 anonymFunction

    ASSGNOP  shift, and go to state 62


State 30

   25 declarations: DVAR IDENTIFIER .
   27             | DVAR IDENTIFIER . ASSGNOP expression

    ASSGNOP  shift, and go to state 63

    $default  reduce using rule 25 (declarations)


State 31

   33 declarations: DFUNC IDENTIFIER . '(' $@5 funcParamsNull ')' '{' $@6 program '}'

    '('  shift, and go to state 64


State 32

   34 assigns: IDENTIFIER ASSGNOP . expression

    VSTR        shift, and go to state 5
    VINT        shift, and go to state 6
    VBOOL       shift, and go to state 7
    VFLOAT      shift, and go to state 8
    IDENTIFIER  shift, and go to state 36
    '['         shift, and go to state 16

    arr_expression  go to state 25
    arr_index       go to state 26
    expression      go to state 65


State 33

   35 assigns: IDENTIFIER '[' . arr_values ']' ASSGNOP expression
   69 arr_index: IDENTIFIER '[' . arr_values ']'

    VSTR        shift, and go to state 5
    VINT        shift, and go to state 6
    VBOOL       shift, and go to state 7
    VFLOAT      shift, and go to state 8
    IDENTIFIER  shift, and go to state 36
    '['         shift, and go to state 16

    arr_expression  go to state 25
    arr_values      go to state 66
    arr_index       go to state 26
    expression      go to state 42


State 34

   12 statement: IDENTIFIER '(' . funcArgsNull ')'

    VSTR        shift, and go to state 5
    VINT        shift, and go to state 6
    VBOOL       shift, and go to state 7
    VFLOAT      shift, and go to state 8
    IDENTIFIER  shift, and go to state 36
    '['         shift, and go to state 16
    ','         shift, and go to state 67

    $default  reduce using rule 51 (funcArgsNull)

    funcArgsNull    go to state 68
    arr_expression  go to state 25
    arr_index       go to state 26
    expression      go to state 69


State 35

   57 conditional: CIF '(' . expression ')' '{' $@14 program $@15 '}' conditionalElse

    VSTR        shift, and go to state 5
    VINT        shift, and go to state 6
    VBOOL       shift, and go to state 7
    VFLOAT      shift, and go to state 8
    IDENTIFIER  shift, and go to state 36
    '['         shift, and go to state 16

    arr_expression  go to state 25
    arr_index       go to state 26
    expression      go to state 70


State 36

   69 arr_index: IDENTIFIER . '[' arr_values ']'
   75 expression: IDENTIFIER .

    '['  shift, and go to state 71

    '['       [reduce using rule 75 (expression)]
    $default  reduce using rule 75 (expression)


State 37

   15 flow: FRETURN expression .
   78 expression: expression . NULLCOALESCING expression
   79           | expression . '?' expression ':' expression
   80           | expression . LOGAND expression
   81           | expression . LOGOR expression
   82           | expression . EXPGT expression
   83           | expression . EXPLT expression
   84           | expression . EXPEQ expression
   85           | expression . EXPDF expression
   86           | expression . '<' expression
   87           | expression . '>' expression
   88           | expression . '+' expression
   89           | expression . '-' expression
   90           | expression . '*' expression
   91           | expression . '/' expression

    EXPGT           shift, and go to state 47
    EXPLT           shift, and go to state 48
    EXPEQ           shift, and go to state 49
    EXPDF           shift, and go to state 50
    NULLCOALESCING  shift, and go to state 51
    LOGOR           shift, and go to state 52
    LOGAND          shift, and go to state 53
    '?'             shift, and go to state 54
    '>'             shift, and go to state 55
    '<'             shift, and go to state 56
    '-'             shift, and go to state 57
    '+'             shift, and go to state 58
    '*'             shift, and go to state 59
    '/'             shift, and go to state 60

    $default  reduce using rule 15 (flow)


State 38

   19 loop: LFOR '(' . declarations SEMICOLON expression SEMICOLON assigns ')' '{' $@1 program '}'
   21     | LFOR '(' . DLET IDENTIFIER LOF IDENTIFIER ')' '{' $@2 program '}'

    DLET    shift, and go to state 72
    DCONST  shift, and go to state 2
    DVAR    shift, and go to state 3
    DFUNC   shift, and go to state 4

    declarations  go to state 73


State 39

   23 loop: LWHILE '(' . expression ')' '{' $@3 program '}'

    VSTR        shift, and go to state 5
    VINT        shift, and go to state 6
    VBOOL       shift, and go to state 7
    VFLOAT      shift, and go to state 8
    IDENTIFIER  shift, and go to state 36
    '['         shift, and go to state 16

    arr_expression  go to state 25
    arr_index       go to state 26
    expression      go to state 74


State 40

   65 arr_expression: '[' ']' .

    $default  reduce using rule 65 (arr_expression)


State 41

   66 arr_expression: '[' arr_values . ']'

    ']'  shift, and go to state 75


State 42

   67 arr_values: expression .
   68           | expression . ',' arr_values
   78 expression: expression . NULLCOALESCING expression
   79           | expression . '?' expression ':' expression
   80           | expression . LOGAND expression
   81           | expression . LOGOR expression
   82           | expression . EXPGT expression
   83           | expression . EXPLT expression
   84           | expression . EXPEQ expression
   85           | expression . EXPDF expression
   86           | expression . '<' expression
   87           | expression . '>' expression
   88           | expression . '+' expression
   89           | expression . '-' expression
   90           | expression . '*' expression
   91           | expression . '/' expression

    EXPGT           shift, and go to state 47
    EXPLT           shift, and go to state 48
    EXPEQ           shift, and go to state 49
    EXPDF           shift, and go to state 50
    NULLCOALESCING  shift, and go to state 51
    LOGOR           shift, and go to state 52
    LOGAND          shift, and go to state 53
    '?'             shift, and go to state 54
    '>'             shift, and go to state 55
    '<'             shift, and go to state 56
    '-'             shift, and go to state 57
    '+'             shift, and go to state 58
    '*'             shift, and go to state 59
    '/'             shift, and go to state 60
    ','             shift, and go to state 76

    $default  reduce using rule 67 (arr_values)


State 43

    0 $accept: goal $end .

    $default  accept


State 44

    6 semicolon_not: SEMICOLON .

    $default  reduce using rule 6 (semicolon_not)


State 45

    3 program: statement semicolon_not .
    4        | statement semicolon_not . program

    DLET        shift, and go to state 1
    DCONST      shift, and go to state 2
    DVAR        shift, and go to state 3
    DFUNC       shift, and go to state 4
    VSTR        shift, and go to state 5
    VINT        shift, and go to state 6
    VBOOL       shift, and go to state 7
    VFLOAT      shift, and go to state 8
    IDENTIFIER  shift, and go to state 9
    CIF         shift, and go to state 10
    FRETURN     shift, and go to state 11
    FBREAK      shift, and go to state 12
    FCONTINUE   shift, and go to state 13
    LFOR        shift, and go to state 14
    LWHILE      shift, and go to state 15
    '['         shift, and go to state 16

    $default  reduce using rule 3 (program)

    program         go to state 77
    statement       go to state 19
    flow            go to state 20
    loop            go to state 21
    declarations    go to state 22
    assigns         go to state 23
    conditional     go to state 24
    arr_expression  go to state 25
    arr_index       go to state 26
    expression      go to state 27


State 46

   70 arr_index: arr_expression '[' . arr_values ']'

    VSTR        shift, and go to state 5
    VINT        shift, and go to state 6
    VBOOL       shift, and go to state 7
    VFLOAT      shift, and go to state 8
    IDENTIFIER  shift, and go to state 36
    '['         shift, and go to state 16

    arr_expression  go to state 25
    arr_values      go to state 78
    arr_index       go to state 26
    expression      go to state 42


State 47

   82 expression: expression EXPGT . expression

    VSTR        shift, and go to state 5
    VINT        shift, and go to state 6
    VBOOL       shift, and go to state 7
    VFLOAT      shift, and go to state 8
    IDENTIFIER  shift, and go to state 36
    '['         shift, and go to state 16

    arr_expression  go to state 25
    arr_index       go to state 26
    expression      go to state 79


State 48

   83 expression: expression EXPLT . expression

    VSTR        shift, and go to state 5
    VINT        shift, and go to state 6
    VBOOL       shift, and go to state 7
    VFLOAT      shift, and go to state 8
    IDENTIFIER  shift, and go to state 36
    '['         shift, and go to state 16

    arr_expression  go to state 25
    arr_index       go to state 26
    expression      go to state 80


State 49

   84 expression: expression EXPEQ . expression

    VSTR        shift, and go to state 5
    VINT        shift, and go to state 6
    VBOOL       shift, and go to state 7
    VFLOAT      shift, and go to state 8
    IDENTIFIER  shift, and go to state 36
    '['         shift, and go to state 16

    arr_expression  go to state 25
    arr_index       go to state 26
    expression      go to state 81


State 50

   85 expression: expression EXPDF . expression

    VSTR        shift, and go to state 5
    VINT        shift, and go to state 6
    VBOOL       shift, and go to state 7
    VFLOAT      shift, and go to state 8
    IDENTIFIER  shift, and go to state 36
    '['         shift, and go to state 16

    arr_expression  go to state 25
    arr_index       go to state 26
    expression      go to state 82


State 51

   78 expression: expression NULLCOALESCING . expression

    VSTR        shift, and go to state 5
    VINT        shift, and go to state 6
    VBOOL       shift, and go to state 7
    VFLOAT      shift, and go to state 8
    IDENTIFIER  shift, and go to state 36
    '['         shift, and go to state 16

    arr_expression  go to state 25
    arr_index       go to state 26
    expression      go to state 83


State 52

   81 expression: expression LOGOR . expression

    VSTR        shift, and go to state 5
    VINT        shift, and go to state 6
    VBOOL       shift, and go to state 7
    VFLOAT      shift, and go to state 8
    IDENTIFIER  shift, and go to state 36
    '['         shift, and go to state 16

    arr_expression  go to state 25
    arr_index       go to state 26
    expression      go to state 84


State 53

   80 expression: expression LOGAND . expression

    VSTR        shift, and go to state 5
    VINT        shift, and go to state 6
    VBOOL       shift, and go to state 7
    VFLOAT      shift, and go to state 8
    IDENTIFIER  shift, and go to state 36
    '['         shift, and go to state 16

    arr_expression  go to state 25
    arr_index       go to state 26
    expression      go to state 85


State 54

   79 expression: expression '?' . expression ':' expression

    VSTR        shift, and go to state 5
    VINT        shift, and go to state 6
    VBOOL       shift, and go to state 7
    VFLOAT      shift, and go to state 8
    IDENTIFIER  shift, and go to state 36
    '['         shift, and go to state 16

    arr_expression  go to state 25
    arr_index       go to state 26
    expression      go to state 86


State 55

   87 expression: expression '>' . expression

    VSTR        shift, and go to state 5
    VINT        shift, and go to state 6
    VBOOL       shift, and go to state 7
    VFLOAT      shift, and go to state 8
    IDENTIFIER  shift, and go to state 36
    '['         shift, and go to state 16

    arr_expression  go to state 25
    arr_index       go to state 26
    expression      go to state 87


State 56

   86 expression: expression '<' . expression

    VSTR        shift, and go to state 5
    VINT        shift, and go to state 6
    VBOOL       shift, and go to state 7
    VFLOAT      shift, and go to state 8
    IDENTIFIER  shift, and go to state 36
    '['         shift, and go to state 16

    arr_expression  go to state 25
    arr_index       go to state 26
    expression      go to state 88


State 57

   89 expression: expression '-' . expression

    VSTR        shift, and go to state 5
    VINT        shift, and go to state 6
    VBOOL       shift, and go to state 7
    VFLOAT      shift, and go to state 8
    IDENTIFIER  shift, and go to state 36
    '['         shift, and go to state 16

    arr_expression  go to state 25
    arr_index       go to state 26
    expression      go to state 89


State 58

   88 expression: expression '+' . expression

    VSTR        shift, and go to state 5
    VINT        shift, and go to state 6
    VBOOL       shift, and go to state 7
    VFLOAT      shift, and go to state 8
    IDENTIFIER  shift, and go to state 36
    '['         shift, and go to state 16

    arr_expression  go to state 25
    arr_index       go to state 26
    expression      go to state 90


State 59

   90 expression: expression '*' . expression

    VSTR        shift, and go to state 5
    VINT        shift, and go to state 6
    VBOOL       shift, and go to state 7
    VFLOAT      shift, and go to state 8
    IDENTIFIER  shift, and go to state 36
    '['         shift, and go to state 16

    arr_expression  go to state 25
    arr_index       go to state 26
    expression      go to state 91


State 60

   91 expression: expression '/' . expression

    VSTR        shift, and go to state 5
    VINT        shift, and go to state 6
    VBOOL       shift, and go to state 7
    VFLOAT      shift, and go to state 8
    IDENTIFIER  shift, and go to state 36
    '['         shift, and go to state 16

    arr_expression  go to state 25
    arr_index       go to state 26
    expression      go to state 92


State 61

   26 declarations: DLET IDENTIFIER ASSGNOP . expression

    VSTR        shift, and go to state 5
    VINT        shift, and go to state 6
    VBOOL       shift, and go to state 7
    VFLOAT      shift, and go to state 8
    IDENTIFIER  shift, and go to state 36
    '['         shift, and go to state 16

    arr_expression  go to state 25
    arr_index       go to state 26
    expression      go to state 93


State 62

   28 declarations: DCONST IDENTIFIER ASSGNOP . expression
   30             | DCONST IDENTIFIER ASSGNOP . $@4 anonymFunction

    VSTR        shift, and go to state 5
    VINT        shift, and go to state 6
    VBOOL       shift, and go to state 7
    VFLOAT      shift, and go to state 8
    IDENTIFIER  shift, and go to state 36
    '['         shift, and go to state 16

    $default  reduce using rule 29 ($@4)

    $@4             go to state 94
    arr_expression  go to state 25
    arr_index       go to state 26
    expression      go to state 95


State 63

   27 declarations: DVAR IDENTIFIER ASSGNOP . expression

    VSTR        shift, and go to state 5
    VINT        shift, and go to state 6
    VBOOL       shift, and go to state 7
    VFLOAT      shift, and go to state 8
    IDENTIFIER  shift, and go to state 36
    '['         shift, and go to state 16

    arr_expression  go to state 25
    arr_index       go to state 26
    expression      go to state 96


State 64

   33 declarations: DFUNC IDENTIFIER '(' . $@5 funcParamsNull ')' '{' $@6 program '}'

    $default  reduce using rule 31 ($@5)

    $@5  go to state 97


State 65

   34 assigns: IDENTIFIER ASSGNOP expression .
   78 expression: expression . NULLCOALESCING expression
   79           | expression . '?' expression ':' expression
   80           | expression . LOGAND expression
   81           | expression . LOGOR expression
   82           | expression . EXPGT expression
   83           | expression . EXPLT expression
   84           | expression . EXPEQ expression
   85           | expression . EXPDF expression
   86           | expression . '<' expression
   87           | expression . '>' expression
   88           | expression . '+' expression
   89           | expression . '-' expression
   90           | expression . '*' expression
   91           | expression . '/' expression

    EXPGT           shift, and go to state 47
    EXPLT           shift, and go to state 48
    EXPEQ           shift, and go to state 49
    EXPDF           shift, and go to state 50
    NULLCOALESCING  shift, and go to state 51
    LOGOR           shift, and go to state 52
    LOGAND          shift, and go to state 53
    '?'             shift, and go to state 54
    '>'             shift, and go to state 55
    '<'             shift, and go to state 56
    '-'             shift, and go to state 57
    '+'             shift, and go to state 58
    '*'             shift, and go to state 59
    '/'             shift, and go to state 60

    $default  reduce using rule 34 (assigns)


State 66

   35 assigns: IDENTIFIER '[' arr_values . ']' ASSGNOP expression
   69 arr_index: IDENTIFIER '[' arr_values . ']'

    ']'  shift, and go to state 98


State 67

   54 funcArgsNull: ',' . funcArgsNull

    VSTR        shift, and go to state 5
    VINT        shift, and go to state 6
    VBOOL       shift, and go to state 7
    VFLOAT      shift, and go to state 8
    IDENTIFIER  shift, and go to state 36
    '['         shift, and go to state 16
    ','         shift, and go to state 67

    $default  reduce using rule 51 (funcArgsNull)

    funcArgsNull    go to state 99
    arr_expression  go to state 25
    arr_index       go to state 26
    expression      go to state 69


State 68

   12 statement: IDENTIFIER '(' funcArgsNull . ')'

    ')'  shift, and go to state 100


State 69

   52 funcArgsNull: expression .
   53             | expression . ',' funcArgsNull
   78 expression: expression . NULLCOALESCING expression
   79           | expression . '?' expression ':' expression
   80           | expression . LOGAND expression
   81           | expression . LOGOR expression
   82           | expression . EXPGT expression
   83           | expression . EXPLT expression
   84           | expression . EXPEQ expression
   85           | expression . EXPDF expression
   86           | expression . '<' expression
   87           | expression . '>' expression
   88           | expression . '+' expression
   89           | expression . '-' expression
   90           | expression . '*' expression
   91           | expression . '/' expression

    EXPGT           shift, and go to state 47
    EXPLT           shift, and go to state 48
    EXPEQ           shift, and go to state 49
    EXPDF           shift, and go to state 50
    NULLCOALESCING  shift, and go to state 51
    LOGOR           shift, and go to state 52
    LOGAND          shift, and go to state 53
    '?'             shift, and go to state 54
    '>'             shift, and go to state 55
    '<'             shift, and go to state 56
    '-'             shift, and go to state 57
    '+'             shift, and go to state 58
    '*'             shift, and go to state 59
    '/'             shift, and go to state 60
    ','             shift, and go to state 101

    $default  reduce using rule 52 (funcArgsNull)


State 70

   57 conditional: CIF '(' expression . ')' '{' $@14 program $@15 '}' conditionalElse
   78 expression: expression . NULLCOALESCING expression
   79           | expression . '?' expression ':' expression
   80           | expression . LOGAND expression
   81           | expression . LOGOR expression
   82           | expression . EXPGT expression
   83           | expression . EXPLT expression
   84           | expression . EXPEQ expression
   85           | expression . EXPDF expression
   86           | expression . '<' expression
   87           | expression . '>' expression
   88           | expression . '+' expression
   89           | expression . '-' expression
   90           | expression . '*' expression
   91           | expression . '/' expression

    EXPGT           shift, and go to state 47
    EXPLT           shift, and go to state 48
    EXPEQ           shift, and go to state 49
    EXPDF           shift, and go to state 50
    NULLCOALESCING  shift, and go to state 51
    LOGOR           shift, and go to state 52
    LOGAND          shift, and go to state 53
    '?'             shift, and go to state 54
    '>'             shift, and go to state 55
    '<'             shift, and go to state 56
    '-'             shift, and go to state 57
    '+'             shift, and go to state 58
    '*'             shift, and go to state 59
    '/'             shift, and go to state 60
    ')'             shift, and go to state 102


State 71

   69 arr_index: IDENTIFIER '[' . arr_values ']'

    VSTR        shift, and go to state 5
    VINT        shift, and go to state 6
    VBOOL       shift, and go to state 7
    VFLOAT      shift, and go to state 8
    IDENTIFIER  shift, and go to state 36
    '['         shift, and go to state 16

    arr_expression  go to state 25
    arr_values      go to state 103
    arr_index       go to state 26
    expression      go to state 42


State 72

   21 loop: LFOR '(' DLET . IDENTIFIER LOF IDENTIFIER ')' '{' $@2 program '}'
   24 declarations: DLET . IDENTIFIER
   26             | DLET . IDENTIFIER ASSGNOP expression

    IDENTIFIER  shift, and go to state 104


State 73

   19 loop: LFOR '(' declarations . SEMICOLON expression SEMICOLON assigns ')' '{' $@1 program '}'

    SEMICOLON  shift, and go to state 105


State 74

   23 loop: LWHILE '(' expression . ')' '{' $@3 program '}'
   78 expression: expression . NULLCOALESCING expression
   79           | expression . '?' expression ':' expression
   80           | expression . LOGAND expression
   81           | expression . LOGOR expression
   82           | expression . EXPGT expression
   83           | expression . EXPLT expression
   84           | expression . EXPEQ expression
   85           | expression . EXPDF expression
   86           | expression . '<' expression
   87           | expression . '>' expression
   88           | expression . '+' expression
   89           | expression . '-' expression
   90           | expression . '*' expression
   91           | expression . '/' expression

    EXPGT           shift, and go to state 47
    EXPLT           shift, and go to state 48
    EXPEQ           shift, and go to state 49
    EXPDF           shift, and go to state 50
    NULLCOALESCING  shift, and go to state 51
    LOGOR           shift, and go to state 52
    LOGAND          shift, and go to state 53
    '?'             shift, and go to state 54
    '>'             shift, and go to state 55
    '<'             shift, and go to state 56
    '-'             shift, and go to state 57
    '+'             shift, and go to state 58
    '*'             shift, and go to state 59
    '/'             shift, and go to state 60
    ')'             shift, and go to state 106


State 75

   66 arr_expression: '[' arr_values ']' .

    $default  reduce using rule 66 (arr_expression)


State 76

   68 arr_values: expression ',' . arr_values

    VSTR        shift, and go to state 5
    VINT        shift, and go to state 6
    VBOOL       shift, and go to state 7
    VFLOAT      shift, and go to state 8
    IDENTIFIER  shift, and go to state 36
    '['         shift, and go to state 16

    arr_expression  go to state 25
    arr_values      go to state 107
    arr_index       go to state 26
    expression      go to state 42


State 77

    4 program: statement semicolon_not program .

    $default  reduce using rule 4 (program)


State 78

   70 arr_index: arr_expression '[' arr_values . ']'

    ']'  shift, and go to state 108


State 79

   78 expression: expression . NULLCOALESCING expression
   79           | expression . '?' expression ':' expression
   80           | expression . LOGAND expression
   81           | expression . LOGOR expression
   82           | expression . EXPGT expression
   82           | expression EXPGT expression .
   83           | expression . EXPLT expression
   84           | expression . EXPEQ expression
   85           | expression . EXPDF expression
   86           | expression . '<' expression
   87           | expression . '>' expression
   88           | expression . '+' expression
   89           | expression . '-' expression
   90           | expression . '*' expression
   91           | expression . '/' expression

    '-'  shift, and go to state 57
    '+'  shift, and go to state 58
    '*'  shift, and go to state 59
    '/'  shift, and go to state 60

    $default  reduce using rule 82 (expression)


State 80

   78 expression: expression . NULLCOALESCING expression
   79           | expression . '?' expression ':' expression
   80           | expression . LOGAND expression
   81           | expression . LOGOR expression
   82           | expression . EXPGT expression
   83           | expression . EXPLT expression
   83           | expression EXPLT expression .
   84           | expression . EXPEQ expression
   85           | expression . EXPDF expression
   86           | expression . '<' expression
   87           | expression . '>' expression
   88           | expression . '+' expression
   89           | expression . '-' expression
   90           | expression . '*' expression
   91           | expression . '/' expression

    '-'  shift, and go to state 57
    '+'  shift, and go to state 58
    '*'  shift, and go to state 59
    '/'  shift, and go to state 60

    $default  reduce using rule 83 (expression)


State 81

   78 expression: expression . NULLCOALESCING expression
   79           | expression . '?' expression ':' expression
   80           | expression . LOGAND expression
   81           | expression . LOGOR expression
   82           | expression . EXPGT expression
   83           | expression . EXPLT expression
   84           | expression . EXPEQ expression
   84           | expression EXPEQ expression .
   85           | expression . EXPDF expression
   86           | expression . '<' expression
   87           | expression . '>' expression
   88           | expression . '+' expression
   89           | expression . '-' expression
   90           | expression . '*' expression
   91           | expression . '/' expression

    '-'  shift, and go to state 57
    '+'  shift, and go to state 58
    '*'  shift, and go to state 59
    '/'  shift, and go to state 60

    $default  reduce using rule 84 (expression)


State 82

   78 expression: expression . NULLCOALESCING expression
   79           | expression . '?' expression ':' expression
   80           | expression . LOGAND expression
   81           | expression . LOGOR expression
   82           | expression . EXPGT expression
   83           | expression . EXPLT expression
   84           | expression . EXPEQ expression
   85           | expression . EXPDF expression
   85           | expression EXPDF expression .
   86           | expression . '<' expression
   87           | expression . '>' expression
   88           | expression . '+' expression
   89           | expression . '-' expression
   90           | expression . '*' expression
   91           | expression . '/' expression

    '-'  shift, and go to state 57
    '+'  shift, and go to state 58
    '*'  shift, and go to state 59
    '/'  shift, and go to state 60

    $default  reduce using rule 85 (expression)


State 83

   78 expression: expression . NULLCOALESCING expression
   78           | expression NULLCOALESCING expression .
   79           | expression . '?' expression ':' expression
   80           | expression . LOGAND expression
   81           | expression . LOGOR expression
   82           | expression . EXPGT expression
   83           | expression . EXPLT expression
   84           | expression . EXPEQ expression
   85           | expression . EXPDF expression
   86           | expression . '<' expression
   87           | expression . '>' expression
   88           | expression . '+' expression
   89           | expression . '-' expression
   90           | expression . '*' expression
   91           | expression . '/' expression

    EXPGT  shift, and go to state 47
    EXPLT  shift, and go to state 48
    EXPEQ  shift, and go to state 49
    EXPDF  shift, and go to state 50
    '>'    shift, and go to state 55
    '<'    shift, and go to state 56
    '-'    shift, and go to state 57
    '+'    shift, and go to state 58
    '*'    shift, and go to state 59
    '/'    shift, and go to state 60

    $default  reduce using rule 78 (expression)


State 84

   78 expression: expression . NULLCOALESCING expression
   79           | expression . '?' expression ':' expression
   80           | expression . LOGAND expression
   81           | expression . LOGOR expression
   81           | expression LOGOR expression .
   82           | expression . EXPGT expression
   83           | expression . EXPLT expression
   84           | expression . EXPEQ expression
   85           | expression . EXPDF expression
   86           | expression . '<' expression
   87           | expression . '>' expression
   88           | expression . '+' expression
   89           | expression . '-' expression
   90           | expression . '*' expression
   91           | expression . '/' expression

    EXPGT  shift, and go to state 47
    EXPLT  shift, and go to state 48
    EXPEQ  shift, and go to state 49
    EXPDF  shift, and go to state 50
    '>'    shift, and go to state 55
    '<'    shift, and go to state 56
    '-'    shift, and go to state 57
    '+'    shift, and go to state 58
    '*'    shift, and go to state 59
    '/'    shift, and go to state 60

    $default  reduce using rule 81 (expression)


State 85

   78 expression: expression . NULLCOALESCING expression
   79           | expression . '?' expression ':' expression
   80           | expression . LOGAND expression
   80           | expression LOGAND expression .
   81           | expression . LOGOR expression
   82           | expression . EXPGT expression
   83           | expression . EXPLT expression
   84           | expression . EXPEQ expression
   85           | expression . EXPDF expression
   86           | expression . '<' expression
   87           | expression . '>' expression
   88           | expression . '+' expression
   89           | expression . '-' expression
   90           | expression . '*' expression
   91           | expression . '/' expression

    EXPGT  shift, and go to state 47
    EXPLT  shift, and go to state 48
    EXPEQ  shift, and go to state 49
    EXPDF  shift, and go to state 50
    '>'    shift, and go to state 55
    '<'    shift, and go to state 56
    '-'    shift, and go to state 57
    '+'    shift, and go to state 58
    '*'    shift, and go to state 59
    '/'    shift, and go to state 60

    $default  reduce using rule 80 (expression)


State 86

   78 expression: expression . NULLCOALESCING expression
   79           | expression . '?' expression ':' expression
   79           | expression '?' expression . ':' expression
   80           | expression . LOGAND expression
   81           | expression . LOGOR expression
   82           | expression . EXPGT expression
   83           | expression . EXPLT expression
   84           | expression . EXPEQ expression
   85           | expression . EXPDF expression
   86           | expression . '<' expression
   87           | expression . '>' expression
   88           | expression . '+' expression
   89           | expression . '-' expression
   90           | expression . '*' expression
   91           | expression . '/' expression

    EXPGT           shift, and go to state 47
    EXPLT           shift, and go to state 48
    EXPEQ           shift, and go to state 49
    EXPDF           shift, and go to state 50
    NULLCOALESCING  shift, and go to state 51
    LOGOR           shift, and go to state 52
    LOGAND          shift, and go to state 53
    '?'             shift, and go to state 54
    ':'             shift, and go to state 109
    '>'             shift, and go to state 55
    '<'             shift, and go to state 56
    '-'             shift, and go to state 57
    '+'             shift, and go to state 58
    '*'             shift, and go to state 59
    '/'             shift, and go to state 60


State 87

   78 expression: expression . NULLCOALESCING expression
   79           | expression . '?' expression ':' expression
   80           | expression . LOGAND expression
   81           | expression . LOGOR expression
   82           | expression . EXPGT expression
   83           | expression . EXPLT expression
   84           | expression . EXPEQ expression
   85           | expression . EXPDF expression
   86           | expression . '<' expression
   87           | expression . '>' expression
   87           | expression '>' expression .
   88           | expression . '+' expression
   89           | expression . '-' expression
   90           | expression . '*' expression
   91           | expression . '/' expression

    '-'  shift, and go to state 57
    '+'  shift, and go to state 58
    '*'  shift, and go to state 59
    '/'  shift, and go to state 60

    $default  reduce using rule 87 (expression)


State 88

   78 expression: expression . NULLCOALESCING expression
   79           | expression . '?' expression ':' expression
   80           | expression . LOGAND expression
   81           | expression . LOGOR expression
   82           | expression . EXPGT expression
   83           | expression . EXPLT expression
   84           | expression . EXPEQ expression
   85           | expression . EXPDF expression
   86           | expression . '<' expression
   86           | expression '<' expression .
   87           | expression . '>' expression
   88           | expression . '+' expression
   89           | expression . '-' expression
   90           | expression . '*' expression
   91           | expression . '/' expression

    '-'  shift, and go to state 57
    '+'  shift, and go to state 58
    '*'  shift, and go to state 59
    '/'  shift, and go to state 60

    $default  reduce using rule 86 (expression)


State 89

   78 expression: expression . NULLCOALESCING expression
   79           | expression . '?' expression ':' expression
   80           | expression . LOGAND expression
   81           | expression . LOGOR expression
   82           | expression . EXPGT expression
   83           | expression . EXPLT expression
   84           | expression . EXPEQ expression
   85           | expression . EXPDF expression
   86           | expression . '<' expression
   87           | expression . '>' expression
   88           | expression . '+' expression
   89           | expression . '-' expression
   89           | expression '-' expression .
   90           | expression . '*' expression
   91           | expression . '/' expression

    '*'  shift, and go to state 59
    '/'  shift, and go to state 60

    $default  reduce using rule 89 (expression)


State 90

   78 expression: expression . NULLCOALESCING expression
   79           | expression . '?' expression ':' expression
   80           | expression . LOGAND expression
   81           | expression . LOGOR expression
   82           | expression . EXPGT expression
   83           | expression . EXPLT expression
   84           | expression . EXPEQ expression
   85           | expression . EXPDF expression
   86           | expression . '<' expression
   87           | expression . '>' expression
   88           | expression . '+' expression
   88           | expression '+' expression .
   89           | expression . '-' expression
   90           | expression . '*' expression
   91           | expression . '/' expression

    '*'  shift, and go to state 59
    '/'  shift, and go to state 60

    $default  reduce using rule 88 (expression)


State 91

   78 expression: expression . NULLCOALESCING expression
   79           | expression . '?' expression ':' expression
   80           | expression . LOGAND expression
   81           | expression . LOGOR expression
   82           | expression . EXPGT expression
   83           | expression . EXPLT expression
   84           | expression . EXPEQ expression
   85           | expression . EXPDF expression
   86           | expression . '<' expression
   87           | expression . '>' expression
   88           | expression . '+' expression
   89           | expression . '-' expression
   90           | expression . '*' expression
   90           | expression '*' expression .
   91           | expression . '/' expression

    $default  reduce using rule 90 (expression)


State 92

   78 expression: expression . NULLCOALESCING expression
   79           | expression . '?' expression ':' expression
   80           | expression . LOGAND expression
   81           | expression . LOGOR expression
   82           | expression . EXPGT expression
   83           | expression . EXPLT expression
   84           | expression . EXPEQ expression
   85           | expression . EXPDF expression
   86           | expression . '<' expression
   87           | expression . '>' expression
   88           | expression . '+' expression
   89           | expression . '-' expression
   90           | expression . '*' expression
   91           | expression . '/' expression
   91           | expression '/' expression .

    $default  reduce using rule 91 (expression)


State 93

   26 declarations: DLET IDENTIFIER ASSGNOP expression .
   78 expression: expression . NULLCOALESCING expression
   79           | expression . '?' expression ':' expression
   80           | expression . LOGAND expression
   81           | expression . LOGOR expression
   82           | expression . EXPGT expression
   83           | expression . EXPLT expression
   84           | expression . EXPEQ expression
   85           | expression . EXPDF expression
   86           | expression . '<' expression
   87           | expression . '>' expression
   88           | expression . '+' expression
   89           | expression . '-' expression
   90           | expression . '*' expression
   91           | expression . '/' expression

    EXPGT           shift, and go to state 47
    EXPLT           shift, and go to state 48
    EXPEQ           shift, and go to state 49
    EXPDF           shift, and go to state 50
    NULLCOALESCING  shift, and go to state 51
    LOGOR           shift, and go to state 52
    LOGAND          shift, and go to state 53
    '?'             shift, and go to state 54
    '>'             shift, and go to state 55
    '<'             shift, and go to state 56
    '-'             shift, and go to state 57
    '+'             shift, and go to state 58
    '*'             shift, and go to state 59
    '/'             shift, and go to state 60

    $default  reduce using rule 26 (declarations)


State 94

   30 declarations: DCONST IDENTIFIER ASSGNOP $@4 . anonymFunction

    DFUNC  shift, and go to state 110
    '('    shift, and go to state 111

    anonymFunction  go to state 112


State 95

   28 declarations: DCONST IDENTIFIER ASSGNOP expression .
   78 expression: expression . NULLCOALESCING expression
   79           | expression . '?' expression ':' expression
   80           | expression . LOGAND expression
   81           | expression . LOGOR expression
   82           | expression . EXPGT expression
   83           | expression . EXPLT expression
   84           | expression . EXPEQ expression
   85           | expression . EXPDF expression
   86           | expression . '<' expression
   87           | expression . '>' expression
   88           | expression . '+' expression
   89           | expression . '-' expression
   90           | expression . '*' expression
   91           | expression . '/' expression

    EXPGT           shift, and go to state 47
    EXPLT           shift, and go to state 48
    EXPEQ           shift, and go to state 49
    EXPDF           shift, and go to state 50
    NULLCOALESCING  shift, and go to state 51
    LOGOR           shift, and go to state 52
    LOGAND          shift, and go to state 53
    '?'             shift, and go to state 54
    '>'             shift, and go to state 55
    '<'             shift, and go to state 56
    '-'             shift, and go to state 57
    '+'             shift, and go to state 58
    '*'             shift, and go to state 59
    '/'             shift, and go to state 60

    $default  reduce using rule 28 (declarations)


State 96

   27 declarations: DVAR IDENTIFIER ASSGNOP expression .
   78 expression: expression . NULLCOALESCING expression
   79           | expression . '?' expression ':' expression
   80           | expression . LOGAND expression
   81           | expression . LOGOR expression
   82           | expression . EXPGT expression
   83           | expression . EXPLT expression
   84           | expression . EXPEQ expression
   85           | expression . EXPDF expression
   86           | expression . '<' expression
   87           | expression . '>' expression
   88           | expression . '+' expression
   89           | expression . '-' expression
   90           | expression . '*' expression
   91           | expression . '/' expression

    EXPGT           shift, and go to state 47
    EXPLT           shift, and go to state 48
    EXPEQ           shift, and go to state 49
    EXPDF           shift, and go to state 50
    NULLCOALESCING  shift, and go to state 51
    LOGOR           shift, and go to state 52
    LOGAND          shift, and go to state 53
    '?'             shift, and go to state 54
    '>'             shift, and go to state 55
    '<'             shift, and go to state 56
    '-'             shift, and go to state 57
    '+'             shift, and go to state 58
    '*'             shift, and go to state 59
    '/'             shift, and go to state 60

    $default  reduce using rule 27 (declarations)


State 97

   33 declarations: DFUNC IDENTIFIER '(' $@5 . funcParamsNull ')' '{' $@6 program '}'

    IDENTIFIER  shift, and go to state 113

    $default  reduce using rule 41 (funcParamsNull)

    assigns         go to state 114
    funcParamsNull  go to state 115
    funcParams      go to state 116


State 98

   35 assigns: IDENTIFIER '[' arr_values ']' . ASSGNOP expression
   69 arr_index: IDENTIFIER '[' arr_values ']' .

    ASSGNOP  shift, and go to state 117

    $default  reduce using rule 69 (arr_index)


State 99

   54 funcArgsNull: ',' funcArgsNull .

    $default  reduce using rule 54 (funcArgsNull)


State 100

   12 statement: IDENTIFIER '(' funcArgsNull ')' .

    $default  reduce using rule 12 (statement)


State 101

   53 funcArgsNull: expression ',' . funcArgsNull

    VSTR        shift, and go to state 5
    VINT        shift, and go to state 6
    VBOOL       shift, and go to state 7
    VFLOAT      shift, and go to state 8
    IDENTIFIER  shift, and go to state 36
    '['         shift, and go to state 16
    ','         shift, and go to state 67

    $default  reduce using rule 51 (funcArgsNull)

    funcArgsNull    go to state 118
    arr_expression  go to state 25
    arr_index       go to state 26
    expression      go to state 69


State 102

   57 conditional: CIF '(' expression ')' . '{' $@14 program $@15 '}' conditionalElse

    '{'  shift, and go to state 119


State 103

   69 arr_index: IDENTIFIER '[' arr_values . ']'

    ']'  shift, and go to state 120


State 104

   21 loop: LFOR '(' DLET IDENTIFIER . LOF IDENTIFIER ')' '{' $@2 program '}'
   24 declarations: DLET IDENTIFIER .
   26             | DLET IDENTIFIER . ASSGNOP expression

    ASSGNOP  shift, and go to state 61
    LOF      shift, and go to state 121

    $default  reduce using rule 24 (declarations)


State 105

   19 loop: LFOR '(' declarations SEMICOLON . expression SEMICOLON assigns ')' '{' $@1 program '}'

    VSTR        shift, and go to state 5
    VINT        shift, and go to state 6
    VBOOL       shift, and go to state 7
    VFLOAT      shift, and go to state 8
    IDENTIFIER  shift, and go to state 36
    '['         shift, and go to state 16

    arr_expression  go to state 25
    arr_index       go to state 26
    expression      go to state 122


State 106

   23 loop: LWHILE '(' expression ')' . '{' $@3 program '}'

    '{'  shift, and go to state 123


State 107

   68 arr_values: expression ',' arr_values .

    $default  reduce using rule 68 (arr_values)


State 108

   70 arr_index: arr_expression '[' arr_values ']' .

    $default  reduce using rule 70 (arr_index)


State 109

   79 expression: expression '?' expression ':' . expression

    VSTR        shift, and go to state 5
    VINT        shift, and go to state 6
    VBOOL       shift, and go to state 7
    VFLOAT      shift, and go to state 8
    IDENTIFIER  shift, and go to state 36
    '['         shift, and go to state 16

    arr_expression  go to state 25
    arr_index       go to state 26
    expression      go to state 124


State 110

   38 anonymFunction: DFUNC . '(' $@7 funcParamsNull ')' '{' $@8 program '}'

    '('  shift, and go to state 125


State 111

   40 anonymFunction: '(' . funcParamsNull ')' DAFUNC '{' $@9 program '}'

    IDENTIFIER  shift, and go to state 113

    $default  reduce using rule 41 (funcParamsNull)

    assigns         go to state 114
    funcParamsNull  go to state 126
    funcParams      go to state 116


State 112

   30 declarations: DCONST IDENTIFIER ASSGNOP $@4 anonymFunction .

    $default  reduce using rule 30 (declarations)


State 113

   34 assigns: IDENTIFIER . ASSGNOP expression
   35        | IDENTIFIER . '[' arr_values ']' ASSGNOP expression
   43 funcParams: IDENTIFIER .
   47           | IDENTIFIER . $@10 ',' $@11 funcParams

    ASSGNOP  shift, and go to state 32
    '['      shift, and go to state 127

    ','       reduce using rule 45 ($@10)
    $default  reduce using rule 43 (funcParams)

    $@10  go to state 128


State 114

   44 funcParams: assigns .
   50           | assigns . $@12 ',' $@13 funcParams

    ','       reduce using rule 48 ($@12)
    $default  reduce using rule 44 (funcParams)

    $@12  go to state 129


State 115

   33 declarations: DFUNC IDENTIFIER '(' $@5 funcParamsNull . ')' '{' $@6 program '}'

    ')'  shift, and go to state 130


State 116

   42 funcParamsNull: funcParams .

    $default  reduce using rule 42 (funcParamsNull)


State 117

   35 assigns: IDENTIFIER '[' arr_values ']' ASSGNOP . expression

    VSTR        shift, and go to state 5
    VINT        shift, and go to state 6
    VBOOL       shift, and go to state 7
    VFLOAT      shift, and go to state 8
    IDENTIFIER  shift, and go to state 36
    '['         shift, and go to state 16

    arr_expression  go to state 25
    arr_index       go to state 26
    expression      go to state 131


State 118

   53 funcArgsNull: expression ',' funcArgsNull .

    $default  reduce using rule 53 (funcArgsNull)


State 119

   57 conditional: CIF '(' expression ')' '{' . $@14 program $@15 '}' conditionalElse

    $default  reduce using rule 55 ($@14)

    $@14  go to state 132


State 120

   69 arr_index: IDENTIFIER '[' arr_values ']' .

    $default  reduce using rule 69 (arr_index)


State 121

   21 loop: LFOR '(' DLET IDENTIFIER LOF . IDENTIFIER ')' '{' $@2 program '}'

    IDENTIFIER  shift, and go to state 133


State 122

   19 loop: LFOR '(' declarations SEMICOLON expression . SEMICOLON assigns ')' '{' $@1 program '}'
   78 expression: expression . NULLCOALESCING expression
   79           | expression . '?' expression ':' expression
   80           | expression . LOGAND expression
   81           | expression . LOGOR expression
   82           | expression . EXPGT expression
   83           | expression . EXPLT expression
   84           | expression . EXPEQ expression
   85           | expression . EXPDF expression
   86           | expression . '<' expression
   87           | expression . '>' expression
   88           | expression . '+' expression
   89           | expression . '-' expression
   90           | expression . '*' expression
   91           | expression . '/' expression

    EXPGT           shift, and go to state 47
    EXPLT           shift, and go to state 48
    EXPEQ           shift, and go to state 49
    EXPDF           shift, and go to state 50
    NULLCOALESCING  shift, and go to state 51
    LOGOR           shift, and go to state 52
    LOGAND          shift, and go to state 53
    SEMICOLON       shift, and go to state 134
    '?'             shift, and go to state 54
    '>'             shift, and go to state 55
    '<'             shift, and go to state 56
    '-'             shift, and go to state 57
    '+'             shift, and go to state 58
    '*'             shift, and go to state 59
    '/'             shift, and go to state 60


State 123

   23 loop: LWHILE '(' expression ')' '{' . $@3 program '}'

    $default  reduce using rule 22 ($@3)

    $@3  go to state 135


State 124

   78 expression: expression . NULLCOALESCING expression
   79           | expression . '?' expression ':' expression
   79           | expression '?' expression ':' expression .
   80           | expression . LOGAND expression
   81           | expression . LOGOR expression
   82           | expression . EXPGT expression
   83           | expression . EXPLT expression
   84           | expression . EXPEQ expression
   85           | expression . EXPDF expression
   86           | expression . '<' expression
   87           | expression . '>' expression
   88           | expression . '+' expression
   89           | expression . '-' expression
   90           | expression . '*' expression
   91           | expression . '/' expression

    EXPGT  shift, and go to state 47
    EXPLT  shift, and go to state 48
    EXPEQ  shift, and go to state 49
    EXPDF  shift, and go to state 50
    '>'    shift, and go to state 55
    '<'    shift, and go to state 56
    '-'    shift, and go to state 57
    '+'    shift, and go to state 58
    '*'    shift, and go to state 59
    '/'    shift, and go to state 60

    $default  reduce using rule 79 (expression)


State 125

   38 anonymFunction: DFUNC '(' . $@7 funcParamsNull ')' '{' $@8 program '}'

    $default  reduce using rule 36 ($@7)

    $@7  go to state 136


State 126

   40 anonymFunction: '(' funcParamsNull . ')' DAFUNC '{' $@9 program '}'

    ')'  shift, and go to state 137


State 127

   35 assigns: IDENTIFIER '[' . arr_values ']' ASSGNOP expression

    VSTR        shift, and go to state 5
    VINT        shift, and go to state 6
    VBOOL       shift, and go to state 7
    VFLOAT      shift, and go to state 8
    IDENTIFIER  shift, and go to state 36
    '['         shift, and go to state 16

    arr_expression  go to state 25
    arr_values      go to state 138
    arr_index       go to state 26
    expression      go to state 42


State 128

   47 funcParams: IDENTIFIER $@10 . ',' $@11 funcParams

    ','  shift, and go to state 139


State 129

   50 funcParams: assigns $@12 . ',' $@13 funcParams

    ','  shift, and go to state 140


State 130

   33 declarations: DFUNC IDENTIFIER '(' $@5 funcParamsNull ')' . '{' $@6 program '}'

    '{'  shift, and go to state 141


State 131

   35 assigns: IDENTIFIER '[' arr_values ']' ASSGNOP expression .
   78 expression: expression . NULLCOALESCING expression
   79           | expression . '?' expression ':' expression
   80           | expression . LOGAND expression
   81           | expression . LOGOR expression
   82           | expression . EXPGT expression
   83           | expression . EXPLT expression
   84           | expression . EXPEQ expression
   85           | expression . EXPDF expression
   86           | expression . '<' expression
   87           | expression . '>' expression
   88           | expression . '+' expression
   89           | expression . '-' expression
   90           | expression . '*' expression
   91           | expression . '/' expression

    EXPGT           shift, and go to state 47
    EXPLT           shift, and go to state 48
    EXPEQ           shift, and go to state 49
    EXPDF           shift, and go to state 50
    NULLCOALESCING  shift, and go to state 51
    LOGOR           shift, and go to state 52
    LOGAND          shift, and go to state 53
    '?'             shift, and go to state 54
    '>'             shift, and go to state 55
    '<'             shift, and go to state 56
    '-'             shift, and go to state 57
    '+'             shift, and go to state 58
    '*'             shift, and go to state 59
    '/'             shift, and go to state 60

    $default  reduce using rule 35 (assigns)


State 132

   57 conditional: CIF '(' expression ')' '{' $@14 . program $@15 '}' conditionalElse

    DLET        shift, and go to state 1
    DCONST      shift, and go to state 2
    DVAR        shift, and go to state 3
    DFUNC       shift, and go to state 4
    VSTR        shift, and go to state 5
    VINT        shift, and go to state 6
    VBOOL       shift, and go to state 7
    VFLOAT      shift, and go to state 8
    IDENTIFIER  shift, and go to state 9
    CIF         shift, and go to state 10
    FRETURN     shift, and go to state 11
    FBREAK      shift, and go to state 12
    FCONTINUE   shift, and go to state 13
    LFOR        shift, and go to state 14
    LWHILE      shift, and go to state 15
    '['         shift, and go to state 16

    program         go to state 142
    statement       go to state 19
    flow            go to state 20
    loop            go to state 21
    declarations    go to state 22
    assigns         go to state 23
    conditional     go to state 24
    arr_expression  go to state 25
    arr_index       go to state 26
    expression      go to state 27


State 133

   21 loop: LFOR '(' DLET IDENTIFIER LOF IDENTIFIER . ')' '{' $@2 program '}'

    ')'  shift, and go to state 143


State 134

   19 loop: LFOR '(' declarations SEMICOLON expression SEMICOLON . assigns ')' '{' $@1 program '}'

    IDENTIFIER  shift, and go to state 144

    assigns  go to state 145


State 135

   23 loop: LWHILE '(' expression ')' '{' $@3 . program '}'

    DLET        shift, and go to state 1
    DCONST      shift, and go to state 2
    DVAR        shift, and go to state 3
    DFUNC       shift, and go to state 4
    VSTR        shift, and go to state 5
    VINT        shift, and go to state 6
    VBOOL       shift, and go to state 7
    VFLOAT      shift, and go to state 8
    IDENTIFIER  shift, and go to state 9
    CIF         shift, and go to state 10
    FRETURN     shift, and go to state 11
    FBREAK      shift, and go to state 12
    FCONTINUE   shift, and go to state 13
    LFOR        shift, and go to state 14
    LWHILE      shift, and go to state 15
    '['         shift, and go to state 16

    program         go to state 146
    statement       go to state 19
    flow            go to state 20
    loop            go to state 21
    declarations    go to state 22
    assigns         go to state 23
    conditional     go to state 24
    arr_expression  go to state 25
    arr_index       go to state 26
    expression      go to state 27


State 136

   38 anonymFunction: DFUNC '(' $@7 . funcParamsNull ')' '{' $@8 program '}'

    IDENTIFIER  shift, and go to state 113

    $default  reduce using rule 41 (funcParamsNull)

    assigns         go to state 114
    funcParamsNull  go to state 147
    funcParams      go to state 116


State 137

   40 anonymFunction: '(' funcParamsNull ')' . DAFUNC '{' $@9 program '}'

    DAFUNC  shift, and go to state 148


State 138

   35 assigns: IDENTIFIER '[' arr_values . ']' ASSGNOP expression

    ']'  shift, and go to state 149


State 139

   47 funcParams: IDENTIFIER $@10 ',' . $@11 funcParams

    $default  reduce using rule 46 ($@11)

    $@11  go to state 150


State 140

   50 funcParams: assigns $@12 ',' . $@13 funcParams

    $default  reduce using rule 49 ($@13)

    $@13  go to state 151


State 141

   33 declarations: DFUNC IDENTIFIER '(' $@5 funcParamsNull ')' '{' . $@6 program '}'

    $default  reduce using rule 32 ($@6)

    $@6  go to state 152


State 142

   57 conditional: CIF '(' expression ')' '{' $@14 program . $@15 '}' conditionalElse

    $default  reduce using rule 56 ($@15)

    $@15  go to state 153


State 143

   21 loop: LFOR '(' DLET IDENTIFIER LOF IDENTIFIER ')' . '{' $@2 program '}'

    '{'  shift, and go to state 154


State 144

   34 assigns: IDENTIFIER . ASSGNOP expression
   35        | IDENTIFIER . '[' arr_values ']' ASSGNOP expression

    ASSGNOP  shift, and go to state 32
    '['      shift, and go to state 127


State 145

   19 loop: LFOR '(' declarations SEMICOLON expression SEMICOLON assigns . ')' '{' $@1 program '}'

    ')'  shift, and go to state 155


State 146

   23 loop: LWHILE '(' expression ')' '{' $@3 program . '}'

    '}'  shift, and go to state 156


State 147

   38 anonymFunction: DFUNC '(' $@7 funcParamsNull . ')' '{' $@8 program '}'

    ')'  shift, and go to state 157


State 148

   40 anonymFunction: '(' funcParamsNull ')' DAFUNC . '{' $@9 program '}'

    '{'  shift, and go to state 158


State 149

   35 assigns: IDENTIFIER '[' arr_values ']' . ASSGNOP expression

    ASSGNOP  shift, and go to state 117


State 150

   47 funcParams: IDENTIFIER $@10 ',' $@11 . funcParams

    IDENTIFIER  shift, and go to state 113

    assigns     go to state 114
    funcParams  go to state 159


State 151

   50 funcParams: assigns $@12 ',' $@13 . funcParams

    IDENTIFIER  shift, and go to state 113

    assigns     go to state 114
    funcParams  go to state 160


State 152

   33 declarations: DFUNC IDENTIFIER '(' $@5 funcParamsNull ')' '{' $@6 . program '}'

    DLET        shift, and go to state 1
    DCONST      shift, and go to state 2
    DVAR        shift, and go to state 3
    DFUNC       shift, and go to state 4
    VSTR        shift, and go to state 5
    VINT        shift, and go to state 6
    VBOOL       shift, and go to state 7
    VFLOAT      shift, and go to state 8
    IDENTIFIER  shift, and go to state 9
    CIF         shift, and go to state 10
    FRETURN     shift, and go to state 11
    FBREAK      shift, and go to state 12
    FCONTINUE   shift, and go to state 13
    LFOR        shift, and go to state 14
    LWHILE      shift, and go to state 15
    '['         shift, and go to state 16

    program         go to state 161
    statement       go to state 19
    flow            go to state 20
    loop            go to state 21
    declarations    go to state 22
    assigns         go to state 23
    conditional     go to state 24
    arr_expression  go to state 25
    arr_index       go to state 26
    expression      go to state 27


State 153

   57 conditional: CIF '(' expression ')' '{' $@14 program $@15 . '}' conditionalElse

    '}'  shift, and go to state 162


State 154

   21 loop: LFOR '(' DLET IDENTIFIER LOF IDENTIFIER ')' '{' . $@2 program '}'

    $default  reduce using rule 20 ($@2)

    $@2  go to state 163


State 155

   19 loop: LFOR '(' declarations SEMICOLON expression SEMICOLON assigns ')' . '{' $@1 program '}'

    '{'  shift, and go to state 164


State 156

   23 loop: LWHILE '(' expression ')' '{' $@3 program '}' .

    $default  reduce using rule 23 (loop)


State 157

   38 anonymFunction: DFUNC '(' $@7 funcParamsNull ')' . '{' $@8 program '}'

    '{'  shift, and go to state 165


State 158

   40 anonymFunction: '(' funcParamsNull ')' DAFUNC '{' . $@9 program '}'

    $default  reduce using rule 39 ($@9)

    $@9  go to state 166


State 159

   47 funcParams: IDENTIFIER $@10 ',' $@11 funcParams .

    $default  reduce using rule 47 (funcParams)


State 160

   50 funcParams: assigns $@12 ',' $@13 funcParams .

    $default  reduce using rule 50 (funcParams)


State 161

   33 declarations: DFUNC IDENTIFIER '(' $@5 funcParamsNull ')' '{' $@6 program . '}'

    '}'  shift, and go to state 167


State 162

   57 conditional: CIF '(' expression ')' '{' $@14 program $@15 '}' . conditionalElse

    CELSE  shift, and go to state 168

    $default  reduce using rule 58 (conditionalElse)

    conditionalElse  go to state 169


State 163

   21 loop: LFOR '(' DLET IDENTIFIER LOF IDENTIFIER ')' '{' $@2 . program '}'

    DLET        shift, and go to state 1
    DCONST      shift, and go to state 2
    DVAR        shift, and go to state 3
    DFUNC       shift, and go to state 4
    VSTR        shift, and go to state 5
    VINT        shift, and go to state 6
    VBOOL       shift, and go to state 7
    VFLOAT      shift, and go to state 8
    IDENTIFIER  shift, and go to state 9
    CIF         shift, and go to state 10
    FRETURN     shift, and go to state 11
    FBREAK      shift, and go to state 12
    FCONTINUE   shift, and go to state 13
    LFOR        shift, and go to state 14
    LWHILE      shift, and go to state 15
    '['         shift, and go to state 16

    program         go to state 170
    statement       go to state 19
    flow            go to state 20
    loop            go to state 21
    declarations    go to state 22
    assigns         go to state 23
    conditional     go to state 24
    arr_expression  go to state 25
    arr_index       go to state 26
    expression      go to state 27


State 164

   19 loop: LFOR '(' declarations SEMICOLON expression SEMICOLON assigns ')' '{' . $@1 program '}'

    $default  reduce using rule 18 ($@1)

    $@1  go to state 171


State 165

   38 anonymFunction: DFUNC '(' $@7 funcParamsNull ')' '{' . $@8 program '}'

    $default  reduce using rule 37 ($@8)

    $@8  go to state 172


State 166

   40 anonymFunction: '(' funcParamsNull ')' DAFUNC '{' $@9 . program '}'

    DLET        shift, and go to state 1
    DCONST      shift, and go to state 2
    DVAR        shift, and go to state 3
    DFUNC       shift, and go to state 4
    VSTR        shift, and go to state 5
    VINT        shift, and go to state 6
    VBOOL       shift, and go to state 7
    VFLOAT      shift, and go to state 8
    IDENTIFIER  shift, and go to state 9
    CIF         shift, and go to state 10
    FRETURN     shift, and go to state 11
    FBREAK      shift, and go to state 12
    FCONTINUE   shift, and go to state 13
    LFOR        shift, and go to state 14
    LWHILE      shift, and go to state 15
    '['         shift, and go to state 16

    program         go to state 173
    statement       go to state 19
    flow            go to state 20
    loop            go to state 21
    declarations    go to state 22
    assigns         go to state 23
    conditional     go to state 24
    arr_expression  go to state 25
    arr_index       go to state 26
    expression      go to state 27


State 167

   33 declarations: DFUNC IDENTIFIER '(' $@5 funcParamsNull ')' '{' $@6 program '}' .

    $default  reduce using rule 33 (declarations)


State 168

   61 conditionalElse: CELSE . '{' $@16 program $@17 '}'
   64                | CELSE . CIF '(' expression ')' '{' $@18 program $@19 '}' conditionalElse

    CIF  shift, and go to state 174
    '{'  shift, and go to state 175


State 169

   57 conditional: CIF '(' expression ')' '{' $@14 program $@15 '}' conditionalElse .

    $default  reduce using rule 57 (conditional)


State 170

   21 loop: LFOR '(' DLET IDENTIFIER LOF IDENTIFIER ')' '{' $@2 program . '}'

    '}'  shift, and go to state 176


State 171

   19 loop: LFOR '(' declarations SEMICOLON expression SEMICOLON assigns ')' '{' $@1 . program '}'

    DLET        shift, and go to state 1
    DCONST      shift, and go to state 2
    DVAR        shift, and go to state 3
    DFUNC       shift, and go to state 4
    VSTR        shift, and go to state 5
    VINT        shift, and go to state 6
    VBOOL       shift, and go to state 7
    VFLOAT      shift, and go to state 8
    IDENTIFIER  shift, and go to state 9
    CIF         shift, and go to state 10
    FRETURN     shift, and go to state 11
    FBREAK      shift, and go to state 12
    FCONTINUE   shift, and go to state 13
    LFOR        shift, and go to state 14
    LWHILE      shift, and go to state 15
    '['         shift, and go to state 16

    program         go to state 177
    statement       go to state 19
    flow            go to state 20
    loop            go to state 21
    declarations    go to state 22
    assigns         go to state 23
    conditional     go to state 24
    arr_expression  go to state 25
    arr_index       go to state 26
    expression      go to state 27


State 172

   38 anonymFunction: DFUNC '(' $@7 funcParamsNull ')' '{' $@8 . program '}'

    DLET        shift, and go to state 1
    DCONST      shift, and go to state 2
    DVAR        shift, and go to state 3
    DFUNC       shift, and go to state 4
    VSTR        shift, and go to state 5
    VINT        shift, and go to state 6
    VBOOL       shift, and go to state 7
    VFLOAT      shift, and go to state 8
    IDENTIFIER  shift, and go to state 9
    CIF         shift, and go to state 10
    FRETURN     shift, and go to state 11
    FBREAK      shift, and go to state 12
    FCONTINUE   shift, and go to state 13
    LFOR        shift, and go to state 14
    LWHILE      shift, and go to state 15
    '['         shift, and go to state 16

    program         go to state 178
    statement       go to state 19
    flow            go to state 20
    loop            go to state 21
    declarations    go to state 22
    assigns         go to state 23
    conditional     go to state 24
    arr_expression  go to state 25
    arr_index       go to state 26
    expression      go to state 27


State 173

   40 anonymFunction: '(' funcParamsNull ')' DAFUNC '{' $@9 program . '}'

    '}'  shift, and go to state 179


State 174

   64 conditionalElse: CELSE CIF . '(' expression ')' '{' $@18 program $@19 '}' conditionalElse

    '('  shift, and go to state 180


State 175

   61 conditionalElse: CELSE '{' . $@16 program $@17 '}'

    $default  reduce using rule 59 ($@16)

    $@16  go to state 181


State 176

   21 loop: LFOR '(' DLET IDENTIFIER LOF IDENTIFIER ')' '{' $@2 program '}' .

    $default  reduce using rule 21 (loop)


State 177

   19 loop: LFOR '(' declarations SEMICOLON expression SEMICOLON assigns ')' '{' $@1 program . '}'

    '}'  shift, and go to state 182


State 178

   38 anonymFunction: DFUNC '(' $@7 funcParamsNull ')' '{' $@8 program . '}'

    '}'  shift, and go to state 183


State 179

   40 anonymFunction: '(' funcParamsNull ')' DAFUNC '{' $@9 program '}' .

    $default  reduce using rule 40 (anonymFunction)


State 180

   64 conditionalElse: CELSE CIF '(' . expression ')' '{' $@18 program $@19 '}' conditionalElse

    VSTR        shift, and go to state 5
    VINT        shift, and go to state 6
    VBOOL       shift, and go to state 7
    VFLOAT      shift, and go to state 8
    IDENTIFIER  shift, and go to state 36
    '['         shift, and go to state 16

    arr_expression  go to state 25
    arr_index       go to state 26
    expression      go to state 184


State 181

   61 conditionalElse: CELSE '{' $@16 . program $@17 '}'

    DLET        shift, and go to state 1
    DCONST      shift, and go to state 2
    DVAR        shift, and go to state 3
    DFUNC       shift, and go to state 4
    VSTR        shift, and go to state 5
    VINT        shift, and go to state 6
    VBOOL       shift, and go to state 7
    VFLOAT      shift, and go to state 8
    IDENTIFIER  shift, and go to state 9
    CIF         shift, and go to state 10
    FRETURN     shift, and go to state 11
    FBREAK      shift, and go to state 12
    FCONTINUE   shift, and go to state 13
    LFOR        shift, and go to state 14
    LWHILE      shift, and go to state 15
    '['         shift, and go to state 16

    program         go to state 185
    statement       go to state 19
    flow            go to state 20
    loop            go to state 21
    declarations    go to state 22
    assigns         go to state 23
    conditional     go to state 24
    arr_expression  go to state 25
    arr_index       go to state 26
    expression      go to state 27


State 182

   19 loop: LFOR '(' declarations SEMICOLON expression SEMICOLON assigns ')' '{' $@1 program '}' .

    $default  reduce using rule 19 (loop)


State 183

   38 anonymFunction: DFUNC '(' $@7 funcParamsNull ')' '{' $@8 program '}' .

    $default  reduce using rule 38 (anonymFunction)


State 184

   64 conditionalElse: CELSE CIF '(' expression . ')' '{' $@18 program $@19 '}' conditionalElse
   78 expression: expression . NULLCOALESCING expression
   79           | expression . '?' expression ':' expression
   80           | expression . LOGAND expression
   81           | expression . LOGOR expression
   82           | expression . EXPGT expression
   83           | expression . EXPLT expression
   84           | expression . EXPEQ expression
   85           | expression . EXPDF expression
   86           | expression . '<' expression
   87           | expression . '>' expression
   88           | expression . '+' expression
   89           | expression . '-' expression
   90           | expression . '*' expression
   91           | expression . '/' expression

    EXPGT           shift, and go to state 47
    EXPLT           shift, and go to state 48
    EXPEQ           shift, and go to state 49
    EXPDF           shift, and go to state 50
    NULLCOALESCING  shift, and go to state 51
    LOGOR           shift, and go to state 52
    LOGAND          shift, and go to state 53
    '?'             shift, and go to state 54
    '>'             shift, and go to state 55
    '<'             shift, and go to state 56
    '-'             shift, and go to state 57
    '+'             shift, and go to state 58
    '*'             shift, and go to state 59
    '/'             shift, and go to state 60
    ')'             shift, and go to state 186


State 185

   61 conditionalElse: CELSE '{' $@16 program . $@17 '}'

    $default  reduce using rule 60 ($@17)

    $@17  go to state 187


State 186

   64 conditionalElse: CELSE CIF '(' expression ')' . '{' $@18 program $@19 '}' conditionalElse

    '{'  shift, and go to state 188


State 187

   61 conditionalElse: CELSE '{' $@16 program $@17 . '}'

    '}'  shift, and go to state 189


State 188

   64 conditionalElse: CELSE CIF '(' expression ')' '{' . $@18 program $@19 '}' conditionalElse

    $default  reduce using rule 62 ($@18)

    $@18  go to state 190


State 189

   61 conditionalElse: CELSE '{' $@16 program $@17 '}' .

    $default  reduce using rule 61 (conditionalElse)


State 190

   64 conditionalElse: CELSE CIF '(' expression ')' '{' $@18 . program $@19 '}' conditionalElse

    DLET        shift, and go to state 1
    DCONST      shift, and go to state 2
    DVAR        shift, and go to state 3
    DFUNC       shift, and go to state 4
    VSTR        shift, and go to state 5
    VINT        shift, and go to state 6
    VBOOL       shift, and go to state 7
    VFLOAT      shift, and go to state 8
    IDENTIFIER  shift, and go to state 9
    CIF         shift, and go to state 10
    FRETURN     shift, and go to state 11
    FBREAK      shift, and go to state 12
    FCONTINUE   shift, and go to state 13
    LFOR        shift, and go to state 14
    LWHILE      shift, and go to state 15
    '['         shift, and go to state 16

    program         go to state 191
    statement       go to state 19
    flow            go to state 20
    loop            go to state 21
    declarations    go to state 22
    assigns         go to state 23
    conditional     go to state 24
    arr_expression  go to state 25
    arr_index       go to state 26
    expression      go to state 27


State 191

   64 conditionalElse: CELSE CIF '(' expression ')' '{' $@18 program . $@19 '}' conditionalElse

    $default  reduce using rule 63 ($@19)

    $@19  go to state 192


State 192

   64 conditionalElse: CELSE CIF '(' expression ')' '{' $@18 program $@19 . '}' conditionalElse

    '}'  shift, and go to state 193


State 193

   64 conditionalElse: CELSE CIF '(' expression ')' '{' $@18 program $@19 '}' . conditionalElse

    CELSE  shift, and go to state 168

    $default  reduce using rule 58 (conditionalElse)

    conditionalElse  go to state 194


State 194

   64 conditionalElse: CELSE CIF '(' expression ')' '{' $@18 program $@19 '}' conditionalElse .

    $default  reduce using rule 64 (conditionalElse)
