Terminals unused in grammar

   LIN
   CBLOCK
   CINLINE
   '='


State 9 conflicts: 1 shift/reduce
State 11 conflicts: 6 shift/reduce
State 25 conflicts: 1 shift/reduce
State 36 conflicts: 1 shift/reduce


Grammar

    0 $accept: goal $end

    1 goal: program
    2     | %empty

    3 program: statement semicolon_not
    4        | statement semicolon_not program

    5 semicolon_not: %empty
    6              | SEMICOLON

    7 statement: expression
    8          | declarations
    9          | assigns
   10          | conditional
   11          | loop
   12          | flow

   13 flow: FRETURN
   14     | FRETURN expression
   15     | FBREAK
   16     | FCONTINUE

   17 $@1: %empty

   18 loop: LFOR '(' declarations SEMICOLON expression SEMICOLON assigns ')' '{' $@1 program '}'

   19 $@2: %empty

   20 loop: LFOR '(' DLET IDENTIFIER LOF IDENTIFIER ')' '{' $@2 program '}'

   21 $@3: %empty

   22 loop: LFOR '(' DLET IDENTIFIER LOF arr_expression ')' '{' $@3 program '}'

   23 $@4: %empty

   24 loop: LWHILE '(' expression ')' '{' $@4 program '}'

   25 declarations: DLET IDENTIFIER
   26             | DVAR IDENTIFIER
   27             | DLET IDENTIFIER ASSGNOP expression
   28             | DVAR IDENTIFIER ASSGNOP expression
   29             | DCONST IDENTIFIER ASSGNOP expression

   30 $@5: %empty

   31 declarations: DCONST IDENTIFIER ASSGNOP $@5 anonymFunction

   32 $@6: %empty

   33 $@7: %empty

   34 declarations: DFUNC IDENTIFIER '(' $@6 funcParamsNull ')' '{' $@7 program '}'

   35 assigns: IDENTIFIER ASSGNOP expression
   36        | IDENTIFIER '[' arr_values ']' ASSGNOP expression

   37 $@8: %empty

   38 $@9: %empty

   39 anonymFunction: DFUNC '(' $@8 funcParamsNull ')' '{' $@9 program '}'

   40 $@10: %empty

   41 anonymFunction: '(' funcParamsNull ')' DAFUNC '{' $@10 program '}'

   42 funcParamsNull: %empty
   43               | funcParams

   44 funcParams: IDENTIFIER
   45           | assigns

   46 $@11: %empty

   47 $@12: %empty

   48 funcParams: IDENTIFIER $@11 ',' $@12 funcParams

   49 $@13: %empty

   50 $@14: %empty

   51 funcParams: assigns $@13 ',' $@14 funcParams

   52 funcArgsNull: %empty
   53             | expression
   54             | expression ',' funcArgsNull
   55             | ',' funcArgsNull

   56 $@15: %empty

   57 $@16: %empty

   58 conditional: CIF '(' expression ')' '{' $@15 program $@16 '}' conditionalElse

   59 conditionalElse: %empty

   60 $@17: %empty

   61 $@18: %empty

   62 conditionalElse: CELSE '{' $@17 program $@18 '}'

   63 $@19: %empty

   64 $@20: %empty

   65 conditionalElse: CELSE CIF '(' expression ')' '{' $@19 program $@20 '}' conditionalElse

   66 arr_expression: '[' ']'
   67               | '[' arr_values ']'

   68 arr_values: expression
   69           | expression ',' arr_values

   70 arr_index: IDENTIFIER '[' arr_values ']'
   71          | arr_expression '[' arr_values ']'

   72 expression: VSTR
   73           | VBOOL
   74           | VINT
   75           | VFLOAT
   76           | IDENTIFIER
   77           | IDENTIFIER '(' funcArgsNull ')'
   78           | arr_index
   79           | arr_expression
   80           | expression NULLCOALESCING expression
   81           | expression '?' expression ':' expression
   82           | expression LOGAND expression
   83           | expression LOGOR expression
   84           | expression EXPGT expression
   85           | expression EXPLT expression
   86           | expression EXPEQ expression
   87           | expression EXPDF expression
   88           | expression '<' expression
   89           | expression '>' expression
   90           | expression '+' expression
   91           | expression '-' expression
   92           | expression '*' expression
   93           | expression '/' expression


Terminals, with rules where they appear

$end (0) 0
'(' (40) 18 20 22 24 34 39 41 58 65 77
')' (41) 18 20 22 24 34 39 41 58 65 77
'*' (42) 92
'+' (43) 90
',' (44) 48 51 54 55 69
'-' (45) 91
'/' (47) 93
':' (58) 81
'<' (60) 88
'=' (61)
'>' (62) 89
'?' (63) 81
'[' (91) 36 66 67 70 71
']' (93) 36 66 67 70 71
'{' (123) 18 20 22 24 34 39 41 58 62 65
'}' (125) 18 20 22 24 34 39 41 58 62 65
error (256)
DLET (258) 20 22 25 27
DCONST (259) 29 31
DVAR (260) 26 28
DFUNC (261) 34 39
DAFUNC (262) 41
VSTR (263) 72
VINT (264) 74
VBOOL (265) 73
VFLOAT (266) 75
IDENTIFIER (267) 20 22 25 26 27 28 29 31 34 35 36 44 48 70 76 77
CIF (268) 58 65
CELSE (269) 62 65
ASSGNOP (270) 27 28 29 31 35 36
EXPGT (271) 84
EXPLT (272) 85
EXPEQ (273) 86
EXPDF (274) 87
NULLCOALESCING (275) 80
LOGOR (276) 83
LOGAND (277) 82
FRETURN (278) 13 14
FBREAK (279) 15
FCONTINUE (280) 16
SEMICOLON (281) 6 18
LFOR (282) 18 20 22
LOF (283) 20 22
LIN (284)
LWHILE (285) 24
CBLOCK (286)
CINLINE (287)


Nonterminals, with rules where they appear

$accept (49)
    on left: 0
goal (50)
    on left: 1 2, on right: 0
program (51)
    on left: 3 4, on right: 1 4 18 20 22 24 34 39 41 58 62 65
semicolon_not (52)
    on left: 5 6, on right: 3 4
statement (53)
    on left: 7 8 9 10 11 12, on right: 3 4
flow (54)
    on left: 13 14 15 16, on right: 12
loop (55)
    on left: 18 20 22 24, on right: 11
$@1 (56)
    on left: 17, on right: 18
$@2 (57)
    on left: 19, on right: 20
$@3 (58)
    on left: 21, on right: 22
$@4 (59)
    on left: 23, on right: 24
declarations (60)
    on left: 25 26 27 28 29 31 34, on right: 8 18
$@5 (61)
    on left: 30, on right: 31
$@6 (62)
    on left: 32, on right: 34
$@7 (63)
    on left: 33, on right: 34
assigns (64)
    on left: 35 36, on right: 9 18 45 51
anonymFunction (65)
    on left: 39 41, on right: 31
$@8 (66)
    on left: 37, on right: 39
$@9 (67)
    on left: 38, on right: 39
$@10 (68)
    on left: 40, on right: 41
funcParamsNull (69)
    on left: 42 43, on right: 34 39 41
funcParams (70)
    on left: 44 45 48 51, on right: 43 48 51
$@11 (71)
    on left: 46, on right: 48
$@12 (72)
    on left: 47, on right: 48
$@13 (73)
    on left: 49, on right: 51
$@14 (74)
    on left: 50, on right: 51
funcArgsNull (75)
    on left: 52 53 54 55, on right: 54 55 77
conditional (76)
    on left: 58, on right: 10
$@15 (77)
    on left: 56, on right: 58
$@16 (78)
    on left: 57, on right: 58
conditionalElse (79)
    on left: 59 62 65, on right: 58 65
$@17 (80)
    on left: 60, on right: 62
$@18 (81)
    on left: 61, on right: 62
$@19 (82)
    on left: 63, on right: 65
$@20 (83)
    on left: 64, on right: 65
arr_expression (84)
    on left: 66 67, on right: 22 71 79
arr_values (85)
    on left: 68 69, on right: 36 67 69 70 71
arr_index (86)
    on left: 70 71, on right: 78
expression (87)
    on left: 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89
    90 91 92 93, on right: 7 14 18 24 27 28 29 35 36 53 54 58 65 68
    69 80 81 82 83 84 85 86 87 88 89 90 91 92 93


State 0

    0 $accept: . goal $end

    DLET        shift, and go to state 1
    DCONST      shift, and go to state 2
    DVAR        shift, and go to state 3
    DFUNC       shift, and go to state 4
    VSTR        shift, and go to state 5
    VINT        shift, and go to state 6
    VBOOL       shift, and go to state 7
    VFLOAT      shift, and go to state 8
    IDENTIFIER  shift, and go to state 9
    CIF         shift, and go to state 10
    FRETURN     shift, and go to state 11
    FBREAK      shift, and go to state 12
    FCONTINUE   shift, and go to state 13
    LFOR        shift, and go to state 14
    LWHILE      shift, and go to state 15
    '['         shift, and go to state 16

    $default  reduce using rule 2 (goal)

    goal            go to state 17
    program         go to state 18
    statement       go to state 19
    flow            go to state 20
    loop            go to state 21
    declarations    go to state 22
    assigns         go to state 23
    conditional     go to state 24
    arr_expression  go to state 25
    arr_index       go to state 26
    expression      go to state 27


State 1

   25 declarations: DLET . IDENTIFIER
   27             | DLET . IDENTIFIER ASSGNOP expression

    IDENTIFIER  shift, and go to state 28


State 2

   29 declarations: DCONST . IDENTIFIER ASSGNOP expression
   31             | DCONST . IDENTIFIER ASSGNOP $@5 anonymFunction

    IDENTIFIER  shift, and go to state 29


State 3

   26 declarations: DVAR . IDENTIFIER
   28             | DVAR . IDENTIFIER ASSGNOP expression

    IDENTIFIER  shift, and go to state 30


State 4

   34 declarations: DFUNC . IDENTIFIER '(' $@6 funcParamsNull ')' '{' $@7 program '}'

    IDENTIFIER  shift, and go to state 31


State 5

   72 expression: VSTR .

    $default  reduce using rule 72 (expression)


State 6

   74 expression: VINT .

    $default  reduce using rule 74 (expression)


State 7

   73 expression: VBOOL .

    $default  reduce using rule 73 (expression)


State 8

   75 expression: VFLOAT .

    $default  reduce using rule 75 (expression)


State 9

   35 assigns: IDENTIFIER . ASSGNOP expression
   36        | IDENTIFIER . '[' arr_values ']' ASSGNOP expression
   70 arr_index: IDENTIFIER . '[' arr_values ']'
   76 expression: IDENTIFIER .
   77           | IDENTIFIER . '(' funcArgsNull ')'

    ASSGNOP  shift, and go to state 32
    '['      shift, and go to state 33
    '('      shift, and go to state 34

    '['       [reduce using rule 76 (expression)]
    $default  reduce using rule 76 (expression)


State 10

   58 conditional: CIF . '(' expression ')' '{' $@15 program $@16 '}' conditionalElse

    '('  shift, and go to state 35


State 11

   13 flow: FRETURN .
   14     | FRETURN . expression

    VSTR        shift, and go to state 5
    VINT        shift, and go to state 6
    VBOOL       shift, and go to state 7
    VFLOAT      shift, and go to state 8
    IDENTIFIER  shift, and go to state 36
    '['         shift, and go to state 16

    VSTR        [reduce using rule 13 (flow)]
    VINT        [reduce using rule 13 (flow)]
    VBOOL       [reduce using rule 13 (flow)]
    VFLOAT      [reduce using rule 13 (flow)]
    IDENTIFIER  [reduce using rule 13 (flow)]
    '['         [reduce using rule 13 (flow)]
    $default    reduce using rule 13 (flow)

    arr_expression  go to state 25
    arr_index       go to state 26
    expression      go to state 37


State 12

   15 flow: FBREAK .

    $default  reduce using rule 15 (flow)


State 13

   16 flow: FCONTINUE .

    $default  reduce using rule 16 (flow)


State 14

   18 loop: LFOR . '(' declarations SEMICOLON expression SEMICOLON assigns ')' '{' $@1 program '}'
   20     | LFOR . '(' DLET IDENTIFIER LOF IDENTIFIER ')' '{' $@2 program '}'
   22     | LFOR . '(' DLET IDENTIFIER LOF arr_expression ')' '{' $@3 program '}'

    '('  shift, and go to state 38


State 15

   24 loop: LWHILE . '(' expression ')' '{' $@4 program '}'

    '('  shift, and go to state 39


State 16

   66 arr_expression: '[' . ']'
   67               | '[' . arr_values ']'

    VSTR        shift, and go to state 5
    VINT        shift, and go to state 6
    VBOOL       shift, and go to state 7
    VFLOAT      shift, and go to state 8
    IDENTIFIER  shift, and go to state 36
    '['         shift, and go to state 16
    ']'         shift, and go to state 40

    arr_expression  go to state 25
    arr_values      go to state 41
    arr_index       go to state 26
    expression      go to state 42


State 17

    0 $accept: goal . $end

    $end  shift, and go to state 43


State 18

    1 goal: program .

    $default  reduce using rule 1 (goal)


State 19

    3 program: statement . semicolon_not
    4        | statement . semicolon_not program

    SEMICOLON  shift, and go to state 44

    $default  reduce using rule 5 (semicolon_not)

    semicolon_not  go to state 45


State 20

   12 statement: flow .

    $default  reduce using rule 12 (statement)


State 21

   11 statement: loop .

    $default  reduce using rule 11 (statement)


State 22

    8 statement: declarations .

    $default  reduce using rule 8 (statement)


State 23

    9 statement: assigns .

    $default  reduce using rule 9 (statement)


State 24

   10 statement: conditional .

    $default  reduce using rule 10 (statement)


State 25

   71 arr_index: arr_expression . '[' arr_values ']'
   79 expression: arr_expression .

    '['  shift, and go to state 46

    '['       [reduce using rule 79 (expression)]
    $default  reduce using rule 79 (expression)


State 26

   78 expression: arr_index .

    $default  reduce using rule 78 (expression)


State 27

    7 statement: expression .
   80 expression: expression . NULLCOALESCING expression
   81           | expression . '?' expression ':' expression
   82           | expression . LOGAND expression
   83           | expression . LOGOR expression
   84           | expression . EXPGT expression
   85           | expression . EXPLT expression
   86           | expression . EXPEQ expression
   87           | expression . EXPDF expression
   88           | expression . '<' expression
   89           | expression . '>' expression
   90           | expression . '+' expression
   91           | expression . '-' expression
   92           | expression . '*' expression
   93           | expression . '/' expression

    EXPGT           shift, and go to state 47
    EXPLT           shift, and go to state 48
    EXPEQ           shift, and go to state 49
    EXPDF           shift, and go to state 50
    NULLCOALESCING  shift, and go to state 51
    LOGOR           shift, and go to state 52
    LOGAND          shift, and go to state 53
    '?'             shift, and go to state 54
    '>'             shift, and go to state 55
    '<'             shift, and go to state 56
    '-'             shift, and go to state 57
    '+'             shift, and go to state 58
    '*'             shift, and go to state 59
    '/'             shift, and go to state 60

    $default  reduce using rule 7 (statement)


State 28

   25 declarations: DLET IDENTIFIER .
   27             | DLET IDENTIFIER . ASSGNOP expression

    ASSGNOP  shift, and go to state 61

    $default  reduce using rule 25 (declarations)


State 29

   29 declarations: DCONST IDENTIFIER . ASSGNOP expression
   31             | DCONST IDENTIFIER . ASSGNOP $@5 anonymFunction

    ASSGNOP  shift, and go to state 62


State 30

   26 declarations: DVAR IDENTIFIER .
   28             | DVAR IDENTIFIER . ASSGNOP expression

    ASSGNOP  shift, and go to state 63

    $default  reduce using rule 26 (declarations)


State 31

   34 declarations: DFUNC IDENTIFIER . '(' $@6 funcParamsNull ')' '{' $@7 program '}'

    '('  shift, and go to state 64


State 32

   35 assigns: IDENTIFIER ASSGNOP . expression

    VSTR        shift, and go to state 5
    VINT        shift, and go to state 6
    VBOOL       shift, and go to state 7
    VFLOAT      shift, and go to state 8
    IDENTIFIER  shift, and go to state 36
    '['         shift, and go to state 16

    arr_expression  go to state 25
    arr_index       go to state 26
    expression      go to state 65


State 33

   36 assigns: IDENTIFIER '[' . arr_values ']' ASSGNOP expression
   70 arr_index: IDENTIFIER '[' . arr_values ']'

    VSTR        shift, and go to state 5
    VINT        shift, and go to state 6
    VBOOL       shift, and go to state 7
    VFLOAT      shift, and go to state 8
    IDENTIFIER  shift, and go to state 36
    '['         shift, and go to state 16

    arr_expression  go to state 25
    arr_values      go to state 66
    arr_index       go to state 26
    expression      go to state 42


State 34

   77 expression: IDENTIFIER '(' . funcArgsNull ')'

    VSTR        shift, and go to state 5
    VINT        shift, and go to state 6
    VBOOL       shift, and go to state 7
    VFLOAT      shift, and go to state 8
    IDENTIFIER  shift, and go to state 36
    '['         shift, and go to state 16
    ','         shift, and go to state 67

    $default  reduce using rule 52 (funcArgsNull)

    funcArgsNull    go to state 68
    arr_expression  go to state 25
    arr_index       go to state 26
    expression      go to state 69


State 35

   58 conditional: CIF '(' . expression ')' '{' $@15 program $@16 '}' conditionalElse

    VSTR        shift, and go to state 5
    VINT        shift, and go to state 6
    VBOOL       shift, and go to state 7
    VFLOAT      shift, and go to state 8
    IDENTIFIER  shift, and go to state 36
    '['         shift, and go to state 16

    arr_expression  go to state 25
    arr_index       go to state 26
    expression      go to state 70


State 36

   70 arr_index: IDENTIFIER . '[' arr_values ']'
   76 expression: IDENTIFIER .
   77           | IDENTIFIER . '(' funcArgsNull ')'

    '['  shift, and go to state 71
    '('  shift, and go to state 34

    '['       [reduce using rule 76 (expression)]
    $default  reduce using rule 76 (expression)


State 37

   14 flow: FRETURN expression .
   80 expression: expression . NULLCOALESCING expression
   81           | expression . '?' expression ':' expression
   82           | expression . LOGAND expression
   83           | expression . LOGOR expression
   84           | expression . EXPGT expression
   85           | expression . EXPLT expression
   86           | expression . EXPEQ expression
   87           | expression . EXPDF expression
   88           | expression . '<' expression
   89           | expression . '>' expression
   90           | expression . '+' expression
   91           | expression . '-' expression
   92           | expression . '*' expression
   93           | expression . '/' expression

    EXPGT           shift, and go to state 47
    EXPLT           shift, and go to state 48
    EXPEQ           shift, and go to state 49
    EXPDF           shift, and go to state 50
    NULLCOALESCING  shift, and go to state 51
    LOGOR           shift, and go to state 52
    LOGAND          shift, and go to state 53
    '?'             shift, and go to state 54
    '>'             shift, and go to state 55
    '<'             shift, and go to state 56
    '-'             shift, and go to state 57
    '+'             shift, and go to state 58
    '*'             shift, and go to state 59
    '/'             shift, and go to state 60

    $default  reduce using rule 14 (flow)


State 38

   18 loop: LFOR '(' . declarations SEMICOLON expression SEMICOLON assigns ')' '{' $@1 program '}'
   20     | LFOR '(' . DLET IDENTIFIER LOF IDENTIFIER ')' '{' $@2 program '}'
   22     | LFOR '(' . DLET IDENTIFIER LOF arr_expression ')' '{' $@3 program '}'

    DLET    shift, and go to state 72
    DCONST  shift, and go to state 2
    DVAR    shift, and go to state 3
    DFUNC   shift, and go to state 4

    declarations  go to state 73


State 39

   24 loop: LWHILE '(' . expression ')' '{' $@4 program '}'

    VSTR        shift, and go to state 5
    VINT        shift, and go to state 6
    VBOOL       shift, and go to state 7
    VFLOAT      shift, and go to state 8
    IDENTIFIER  shift, and go to state 36
    '['         shift, and go to state 16

    arr_expression  go to state 25
    arr_index       go to state 26
    expression      go to state 74


State 40

   66 arr_expression: '[' ']' .

    $default  reduce using rule 66 (arr_expression)


State 41

   67 arr_expression: '[' arr_values . ']'

    ']'  shift, and go to state 75


State 42

   68 arr_values: expression .
   69           | expression . ',' arr_values
   80 expression: expression . NULLCOALESCING expression
   81           | expression . '?' expression ':' expression
   82           | expression . LOGAND expression
   83           | expression . LOGOR expression
   84           | expression . EXPGT expression
   85           | expression . EXPLT expression
   86           | expression . EXPEQ expression
   87           | expression . EXPDF expression
   88           | expression . '<' expression
   89           | expression . '>' expression
   90           | expression . '+' expression
   91           | expression . '-' expression
   92           | expression . '*' expression
   93           | expression . '/' expression

    EXPGT           shift, and go to state 47
    EXPLT           shift, and go to state 48
    EXPEQ           shift, and go to state 49
    EXPDF           shift, and go to state 50
    NULLCOALESCING  shift, and go to state 51
    LOGOR           shift, and go to state 52
    LOGAND          shift, and go to state 53
    '?'             shift, and go to state 54
    '>'             shift, and go to state 55
    '<'             shift, and go to state 56
    '-'             shift, and go to state 57
    '+'             shift, and go to state 58
    '*'             shift, and go to state 59
    '/'             shift, and go to state 60
    ','             shift, and go to state 76

    $default  reduce using rule 68 (arr_values)


State 43

    0 $accept: goal $end .

    $default  accept


State 44

    6 semicolon_not: SEMICOLON .

    $default  reduce using rule 6 (semicolon_not)


State 45

    3 program: statement semicolon_not .
    4        | statement semicolon_not . program

    DLET        shift, and go to state 1
    DCONST      shift, and go to state 2
    DVAR        shift, and go to state 3
    DFUNC       shift, and go to state 4
    VSTR        shift, and go to state 5
    VINT        shift, and go to state 6
    VBOOL       shift, and go to state 7
    VFLOAT      shift, and go to state 8
    IDENTIFIER  shift, and go to state 9
    CIF         shift, and go to state 10
    FRETURN     shift, and go to state 11
    FBREAK      shift, and go to state 12
    FCONTINUE   shift, and go to state 13
    LFOR        shift, and go to state 14
    LWHILE      shift, and go to state 15
    '['         shift, and go to state 16

    $default  reduce using rule 3 (program)

    program         go to state 77
    statement       go to state 19
    flow            go to state 20
    loop            go to state 21
    declarations    go to state 22
    assigns         go to state 23
    conditional     go to state 24
    arr_expression  go to state 25
    arr_index       go to state 26
    expression      go to state 27


State 46

   71 arr_index: arr_expression '[' . arr_values ']'

    VSTR        shift, and go to state 5
    VINT        shift, and go to state 6
    VBOOL       shift, and go to state 7
    VFLOAT      shift, and go to state 8
    IDENTIFIER  shift, and go to state 36
    '['         shift, and go to state 16

    arr_expression  go to state 25
    arr_values      go to state 78
    arr_index       go to state 26
    expression      go to state 42


State 47

   84 expression: expression EXPGT . expression

    VSTR        shift, and go to state 5
    VINT        shift, and go to state 6
    VBOOL       shift, and go to state 7
    VFLOAT      shift, and go to state 8
    IDENTIFIER  shift, and go to state 36
    '['         shift, and go to state 16

    arr_expression  go to state 25
    arr_index       go to state 26
    expression      go to state 79


State 48

   85 expression: expression EXPLT . expression

    VSTR        shift, and go to state 5
    VINT        shift, and go to state 6
    VBOOL       shift, and go to state 7
    VFLOAT      shift, and go to state 8
    IDENTIFIER  shift, and go to state 36
    '['         shift, and go to state 16

    arr_expression  go to state 25
    arr_index       go to state 26
    expression      go to state 80


State 49

   86 expression: expression EXPEQ . expression

    VSTR        shift, and go to state 5
    VINT        shift, and go to state 6
    VBOOL       shift, and go to state 7
    VFLOAT      shift, and go to state 8
    IDENTIFIER  shift, and go to state 36
    '['         shift, and go to state 16

    arr_expression  go to state 25
    arr_index       go to state 26
    expression      go to state 81


State 50

   87 expression: expression EXPDF . expression

    VSTR        shift, and go to state 5
    VINT        shift, and go to state 6
    VBOOL       shift, and go to state 7
    VFLOAT      shift, and go to state 8
    IDENTIFIER  shift, and go to state 36
    '['         shift, and go to state 16

    arr_expression  go to state 25
    arr_index       go to state 26
    expression      go to state 82


State 51

   80 expression: expression NULLCOALESCING . expression

    VSTR        shift, and go to state 5
    VINT        shift, and go to state 6
    VBOOL       shift, and go to state 7
    VFLOAT      shift, and go to state 8
    IDENTIFIER  shift, and go to state 36
    '['         shift, and go to state 16

    arr_expression  go to state 25
    arr_index       go to state 26
    expression      go to state 83


State 52

   83 expression: expression LOGOR . expression

    VSTR        shift, and go to state 5
    VINT        shift, and go to state 6
    VBOOL       shift, and go to state 7
    VFLOAT      shift, and go to state 8
    IDENTIFIER  shift, and go to state 36
    '['         shift, and go to state 16

    arr_expression  go to state 25
    arr_index       go to state 26
    expression      go to state 84


State 53

   82 expression: expression LOGAND . expression

    VSTR        shift, and go to state 5
    VINT        shift, and go to state 6
    VBOOL       shift, and go to state 7
    VFLOAT      shift, and go to state 8
    IDENTIFIER  shift, and go to state 36
    '['         shift, and go to state 16

    arr_expression  go to state 25
    arr_index       go to state 26
    expression      go to state 85


State 54

   81 expression: expression '?' . expression ':' expression

    VSTR        shift, and go to state 5
    VINT        shift, and go to state 6
    VBOOL       shift, and go to state 7
    VFLOAT      shift, and go to state 8
    IDENTIFIER  shift, and go to state 36
    '['         shift, and go to state 16

    arr_expression  go to state 25
    arr_index       go to state 26
    expression      go to state 86


State 55

   89 expression: expression '>' . expression

    VSTR        shift, and go to state 5
    VINT        shift, and go to state 6
    VBOOL       shift, and go to state 7
    VFLOAT      shift, and go to state 8
    IDENTIFIER  shift, and go to state 36
    '['         shift, and go to state 16

    arr_expression  go to state 25
    arr_index       go to state 26
    expression      go to state 87


State 56

   88 expression: expression '<' . expression

    VSTR        shift, and go to state 5
    VINT        shift, and go to state 6
    VBOOL       shift, and go to state 7
    VFLOAT      shift, and go to state 8
    IDENTIFIER  shift, and go to state 36
    '['         shift, and go to state 16

    arr_expression  go to state 25
    arr_index       go to state 26
    expression      go to state 88


State 57

   91 expression: expression '-' . expression

    VSTR        shift, and go to state 5
    VINT        shift, and go to state 6
    VBOOL       shift, and go to state 7
    VFLOAT      shift, and go to state 8
    IDENTIFIER  shift, and go to state 36
    '['         shift, and go to state 16

    arr_expression  go to state 25
    arr_index       go to state 26
    expression      go to state 89


State 58

   90 expression: expression '+' . expression

    VSTR        shift, and go to state 5
    VINT        shift, and go to state 6
    VBOOL       shift, and go to state 7
    VFLOAT      shift, and go to state 8
    IDENTIFIER  shift, and go to state 36
    '['         shift, and go to state 16

    arr_expression  go to state 25
    arr_index       go to state 26
    expression      go to state 90


State 59

   92 expression: expression '*' . expression

    VSTR        shift, and go to state 5
    VINT        shift, and go to state 6
    VBOOL       shift, and go to state 7
    VFLOAT      shift, and go to state 8
    IDENTIFIER  shift, and go to state 36
    '['         shift, and go to state 16

    arr_expression  go to state 25
    arr_index       go to state 26
    expression      go to state 91


State 60

   93 expression: expression '/' . expression

    VSTR        shift, and go to state 5
    VINT        shift, and go to state 6
    VBOOL       shift, and go to state 7
    VFLOAT      shift, and go to state 8
    IDENTIFIER  shift, and go to state 36
    '['         shift, and go to state 16

    arr_expression  go to state 25
    arr_index       go to state 26
    expression      go to state 92


State 61

   27 declarations: DLET IDENTIFIER ASSGNOP . expression

    VSTR        shift, and go to state 5
    VINT        shift, and go to state 6
    VBOOL       shift, and go to state 7
    VFLOAT      shift, and go to state 8
    IDENTIFIER  shift, and go to state 36
    '['         shift, and go to state 16

    arr_expression  go to state 25
    arr_index       go to state 26
    expression      go to state 93


State 62

   29 declarations: DCONST IDENTIFIER ASSGNOP . expression
   31             | DCONST IDENTIFIER ASSGNOP . $@5 anonymFunction

    VSTR        shift, and go to state 5
    VINT        shift, and go to state 6
    VBOOL       shift, and go to state 7
    VFLOAT      shift, and go to state 8
    IDENTIFIER  shift, and go to state 36
    '['         shift, and go to state 16

    $default  reduce using rule 30 ($@5)

    $@5             go to state 94
    arr_expression  go to state 25
    arr_index       go to state 26
    expression      go to state 95


State 63

   28 declarations: DVAR IDENTIFIER ASSGNOP . expression

    VSTR        shift, and go to state 5
    VINT        shift, and go to state 6
    VBOOL       shift, and go to state 7
    VFLOAT      shift, and go to state 8
    IDENTIFIER  shift, and go to state 36
    '['         shift, and go to state 16

    arr_expression  go to state 25
    arr_index       go to state 26
    expression      go to state 96


State 64

   34 declarations: DFUNC IDENTIFIER '(' . $@6 funcParamsNull ')' '{' $@7 program '}'

    $default  reduce using rule 32 ($@6)

    $@6  go to state 97


State 65

   35 assigns: IDENTIFIER ASSGNOP expression .
   80 expression: expression . NULLCOALESCING expression
   81           | expression . '?' expression ':' expression
   82           | expression . LOGAND expression
   83           | expression . LOGOR expression
   84           | expression . EXPGT expression
   85           | expression . EXPLT expression
   86           | expression . EXPEQ expression
   87           | expression . EXPDF expression
   88           | expression . '<' expression
   89           | expression . '>' expression
   90           | expression . '+' expression
   91           | expression . '-' expression
   92           | expression . '*' expression
   93           | expression . '/' expression

    EXPGT           shift, and go to state 47
    EXPLT           shift, and go to state 48
    EXPEQ           shift, and go to state 49
    EXPDF           shift, and go to state 50
    NULLCOALESCING  shift, and go to state 51
    LOGOR           shift, and go to state 52
    LOGAND          shift, and go to state 53
    '?'             shift, and go to state 54
    '>'             shift, and go to state 55
    '<'             shift, and go to state 56
    '-'             shift, and go to state 57
    '+'             shift, and go to state 58
    '*'             shift, and go to state 59
    '/'             shift, and go to state 60

    $default  reduce using rule 35 (assigns)


State 66

   36 assigns: IDENTIFIER '[' arr_values . ']' ASSGNOP expression
   70 arr_index: IDENTIFIER '[' arr_values . ']'

    ']'  shift, and go to state 98


State 67

   55 funcArgsNull: ',' . funcArgsNull

    VSTR        shift, and go to state 5
    VINT        shift, and go to state 6
    VBOOL       shift, and go to state 7
    VFLOAT      shift, and go to state 8
    IDENTIFIER  shift, and go to state 36
    '['         shift, and go to state 16
    ','         shift, and go to state 67

    $default  reduce using rule 52 (funcArgsNull)

    funcArgsNull    go to state 99
    arr_expression  go to state 25
    arr_index       go to state 26
    expression      go to state 69


State 68

   77 expression: IDENTIFIER '(' funcArgsNull . ')'

    ')'  shift, and go to state 100


State 69

   53 funcArgsNull: expression .
   54             | expression . ',' funcArgsNull
   80 expression: expression . NULLCOALESCING expression
   81           | expression . '?' expression ':' expression
   82           | expression . LOGAND expression
   83           | expression . LOGOR expression
   84           | expression . EXPGT expression
   85           | expression . EXPLT expression
   86           | expression . EXPEQ expression
   87           | expression . EXPDF expression
   88           | expression . '<' expression
   89           | expression . '>' expression
   90           | expression . '+' expression
   91           | expression . '-' expression
   92           | expression . '*' expression
   93           | expression . '/' expression

    EXPGT           shift, and go to state 47
    EXPLT           shift, and go to state 48
    EXPEQ           shift, and go to state 49
    EXPDF           shift, and go to state 50
    NULLCOALESCING  shift, and go to state 51
    LOGOR           shift, and go to state 52
    LOGAND          shift, and go to state 53
    '?'             shift, and go to state 54
    '>'             shift, and go to state 55
    '<'             shift, and go to state 56
    '-'             shift, and go to state 57
    '+'             shift, and go to state 58
    '*'             shift, and go to state 59
    '/'             shift, and go to state 60
    ','             shift, and go to state 101

    $default  reduce using rule 53 (funcArgsNull)


State 70

   58 conditional: CIF '(' expression . ')' '{' $@15 program $@16 '}' conditionalElse
   80 expression: expression . NULLCOALESCING expression
   81           | expression . '?' expression ':' expression
   82           | expression . LOGAND expression
   83           | expression . LOGOR expression
   84           | expression . EXPGT expression
   85           | expression . EXPLT expression
   86           | expression . EXPEQ expression
   87           | expression . EXPDF expression
   88           | expression . '<' expression
   89           | expression . '>' expression
   90           | expression . '+' expression
   91           | expression . '-' expression
   92           | expression . '*' expression
   93           | expression . '/' expression

    EXPGT           shift, and go to state 47
    EXPLT           shift, and go to state 48
    EXPEQ           shift, and go to state 49
    EXPDF           shift, and go to state 50
    NULLCOALESCING  shift, and go to state 51
    LOGOR           shift, and go to state 52
    LOGAND          shift, and go to state 53
    '?'             shift, and go to state 54
    '>'             shift, and go to state 55
    '<'             shift, and go to state 56
    '-'             shift, and go to state 57
    '+'             shift, and go to state 58
    '*'             shift, and go to state 59
    '/'             shift, and go to state 60
    ')'             shift, and go to state 102


State 71

   70 arr_index: IDENTIFIER '[' . arr_values ']'

    VSTR        shift, and go to state 5
    VINT        shift, and go to state 6
    VBOOL       shift, and go to state 7
    VFLOAT      shift, and go to state 8
    IDENTIFIER  shift, and go to state 36
    '['         shift, and go to state 16

    arr_expression  go to state 25
    arr_values      go to state 103
    arr_index       go to state 26
    expression      go to state 42


State 72

   20 loop: LFOR '(' DLET . IDENTIFIER LOF IDENTIFIER ')' '{' $@2 program '}'
   22     | LFOR '(' DLET . IDENTIFIER LOF arr_expression ')' '{' $@3 program '}'
   25 declarations: DLET . IDENTIFIER
   27             | DLET . IDENTIFIER ASSGNOP expression

    IDENTIFIER  shift, and go to state 104


State 73

   18 loop: LFOR '(' declarations . SEMICOLON expression SEMICOLON assigns ')' '{' $@1 program '}'

    SEMICOLON  shift, and go to state 105


State 74

   24 loop: LWHILE '(' expression . ')' '{' $@4 program '}'
   80 expression: expression . NULLCOALESCING expression
   81           | expression . '?' expression ':' expression
   82           | expression . LOGAND expression
   83           | expression . LOGOR expression
   84           | expression . EXPGT expression
   85           | expression . EXPLT expression
   86           | expression . EXPEQ expression
   87           | expression . EXPDF expression
   88           | expression . '<' expression
   89           | expression . '>' expression
   90           | expression . '+' expression
   91           | expression . '-' expression
   92           | expression . '*' expression
   93           | expression . '/' expression

    EXPGT           shift, and go to state 47
    EXPLT           shift, and go to state 48
    EXPEQ           shift, and go to state 49
    EXPDF           shift, and go to state 50
    NULLCOALESCING  shift, and go to state 51
    LOGOR           shift, and go to state 52
    LOGAND          shift, and go to state 53
    '?'             shift, and go to state 54
    '>'             shift, and go to state 55
    '<'             shift, and go to state 56
    '-'             shift, and go to state 57
    '+'             shift, and go to state 58
    '*'             shift, and go to state 59
    '/'             shift, and go to state 60
    ')'             shift, and go to state 106


State 75

   67 arr_expression: '[' arr_values ']' .

    $default  reduce using rule 67 (arr_expression)


State 76

   69 arr_values: expression ',' . arr_values

    VSTR        shift, and go to state 5
    VINT        shift, and go to state 6
    VBOOL       shift, and go to state 7
    VFLOAT      shift, and go to state 8
    IDENTIFIER  shift, and go to state 36
    '['         shift, and go to state 16

    arr_expression  go to state 25
    arr_values      go to state 107
    arr_index       go to state 26
    expression      go to state 42


State 77

    4 program: statement semicolon_not program .

    $default  reduce using rule 4 (program)


State 78

   71 arr_index: arr_expression '[' arr_values . ']'

    ']'  shift, and go to state 108


State 79

   80 expression: expression . NULLCOALESCING expression
   81           | expression . '?' expression ':' expression
   82           | expression . LOGAND expression
   83           | expression . LOGOR expression
   84           | expression . EXPGT expression
   84           | expression EXPGT expression .
   85           | expression . EXPLT expression
   86           | expression . EXPEQ expression
   87           | expression . EXPDF expression
   88           | expression . '<' expression
   89           | expression . '>' expression
   90           | expression . '+' expression
   91           | expression . '-' expression
   92           | expression . '*' expression
   93           | expression . '/' expression

    '-'  shift, and go to state 57
    '+'  shift, and go to state 58
    '*'  shift, and go to state 59
    '/'  shift, and go to state 60

    $default  reduce using rule 84 (expression)


State 80

   80 expression: expression . NULLCOALESCING expression
   81           | expression . '?' expression ':' expression
   82           | expression . LOGAND expression
   83           | expression . LOGOR expression
   84           | expression . EXPGT expression
   85           | expression . EXPLT expression
   85           | expression EXPLT expression .
   86           | expression . EXPEQ expression
   87           | expression . EXPDF expression
   88           | expression . '<' expression
   89           | expression . '>' expression
   90           | expression . '+' expression
   91           | expression . '-' expression
   92           | expression . '*' expression
   93           | expression . '/' expression

    '-'  shift, and go to state 57
    '+'  shift, and go to state 58
    '*'  shift, and go to state 59
    '/'  shift, and go to state 60

    $default  reduce using rule 85 (expression)


State 81

   80 expression: expression . NULLCOALESCING expression
   81           | expression . '?' expression ':' expression
   82           | expression . LOGAND expression
   83           | expression . LOGOR expression
   84           | expression . EXPGT expression
   85           | expression . EXPLT expression
   86           | expression . EXPEQ expression
   86           | expression EXPEQ expression .
   87           | expression . EXPDF expression
   88           | expression . '<' expression
   89           | expression . '>' expression
   90           | expression . '+' expression
   91           | expression . '-' expression
   92           | expression . '*' expression
   93           | expression . '/' expression

    '-'  shift, and go to state 57
    '+'  shift, and go to state 58
    '*'  shift, and go to state 59
    '/'  shift, and go to state 60

    $default  reduce using rule 86 (expression)


State 82

   80 expression: expression . NULLCOALESCING expression
   81           | expression . '?' expression ':' expression
   82           | expression . LOGAND expression
   83           | expression . LOGOR expression
   84           | expression . EXPGT expression
   85           | expression . EXPLT expression
   86           | expression . EXPEQ expression
   87           | expression . EXPDF expression
   87           | expression EXPDF expression .
   88           | expression . '<' expression
   89           | expression . '>' expression
   90           | expression . '+' expression
   91           | expression . '-' expression
   92           | expression . '*' expression
   93           | expression . '/' expression

    '-'  shift, and go to state 57
    '+'  shift, and go to state 58
    '*'  shift, and go to state 59
    '/'  shift, and go to state 60

    $default  reduce using rule 87 (expression)


State 83

   80 expression: expression . NULLCOALESCING expression
   80           | expression NULLCOALESCING expression .
   81           | expression . '?' expression ':' expression
   82           | expression . LOGAND expression
   83           | expression . LOGOR expression
   84           | expression . EXPGT expression
   85           | expression . EXPLT expression
   86           | expression . EXPEQ expression
   87           | expression . EXPDF expression
   88           | expression . '<' expression
   89           | expression . '>' expression
   90           | expression . '+' expression
   91           | expression . '-' expression
   92           | expression . '*' expression
   93           | expression . '/' expression

    EXPGT  shift, and go to state 47
    EXPLT  shift, and go to state 48
    EXPEQ  shift, and go to state 49
    EXPDF  shift, and go to state 50
    '>'    shift, and go to state 55
    '<'    shift, and go to state 56
    '-'    shift, and go to state 57
    '+'    shift, and go to state 58
    '*'    shift, and go to state 59
    '/'    shift, and go to state 60

    $default  reduce using rule 80 (expression)


State 84

   80 expression: expression . NULLCOALESCING expression
   81           | expression . '?' expression ':' expression
   82           | expression . LOGAND expression
   83           | expression . LOGOR expression
   83           | expression LOGOR expression .
   84           | expression . EXPGT expression
   85           | expression . EXPLT expression
   86           | expression . EXPEQ expression
   87           | expression . EXPDF expression
   88           | expression . '<' expression
   89           | expression . '>' expression
   90           | expression . '+' expression
   91           | expression . '-' expression
   92           | expression . '*' expression
   93           | expression . '/' expression

    EXPGT  shift, and go to state 47
    EXPLT  shift, and go to state 48
    EXPEQ  shift, and go to state 49
    EXPDF  shift, and go to state 50
    '>'    shift, and go to state 55
    '<'    shift, and go to state 56
    '-'    shift, and go to state 57
    '+'    shift, and go to state 58
    '*'    shift, and go to state 59
    '/'    shift, and go to state 60

    $default  reduce using rule 83 (expression)


State 85

   80 expression: expression . NULLCOALESCING expression
   81           | expression . '?' expression ':' expression
   82           | expression . LOGAND expression
   82           | expression LOGAND expression .
   83           | expression . LOGOR expression
   84           | expression . EXPGT expression
   85           | expression . EXPLT expression
   86           | expression . EXPEQ expression
   87           | expression . EXPDF expression
   88           | expression . '<' expression
   89           | expression . '>' expression
   90           | expression . '+' expression
   91           | expression . '-' expression
   92           | expression . '*' expression
   93           | expression . '/' expression

    EXPGT  shift, and go to state 47
    EXPLT  shift, and go to state 48
    EXPEQ  shift, and go to state 49
    EXPDF  shift, and go to state 50
    '>'    shift, and go to state 55
    '<'    shift, and go to state 56
    '-'    shift, and go to state 57
    '+'    shift, and go to state 58
    '*'    shift, and go to state 59
    '/'    shift, and go to state 60

    $default  reduce using rule 82 (expression)


State 86

   80 expression: expression . NULLCOALESCING expression
   81           | expression . '?' expression ':' expression
   81           | expression '?' expression . ':' expression
   82           | expression . LOGAND expression
   83           | expression . LOGOR expression
   84           | expression . EXPGT expression
   85           | expression . EXPLT expression
   86           | expression . EXPEQ expression
   87           | expression . EXPDF expression
   88           | expression . '<' expression
   89           | expression . '>' expression
   90           | expression . '+' expression
   91           | expression . '-' expression
   92           | expression . '*' expression
   93           | expression . '/' expression

    EXPGT           shift, and go to state 47
    EXPLT           shift, and go to state 48
    EXPEQ           shift, and go to state 49
    EXPDF           shift, and go to state 50
    NULLCOALESCING  shift, and go to state 51
    LOGOR           shift, and go to state 52
    LOGAND          shift, and go to state 53
    '?'             shift, and go to state 54
    ':'             shift, and go to state 109
    '>'             shift, and go to state 55
    '<'             shift, and go to state 56
    '-'             shift, and go to state 57
    '+'             shift, and go to state 58
    '*'             shift, and go to state 59
    '/'             shift, and go to state 60


State 87

   80 expression: expression . NULLCOALESCING expression
   81           | expression . '?' expression ':' expression
   82           | expression . LOGAND expression
   83           | expression . LOGOR expression
   84           | expression . EXPGT expression
   85           | expression . EXPLT expression
   86           | expression . EXPEQ expression
   87           | expression . EXPDF expression
   88           | expression . '<' expression
   89           | expression . '>' expression
   89           | expression '>' expression .
   90           | expression . '+' expression
   91           | expression . '-' expression
   92           | expression . '*' expression
   93           | expression . '/' expression

    '-'  shift, and go to state 57
    '+'  shift, and go to state 58
    '*'  shift, and go to state 59
    '/'  shift, and go to state 60

    $default  reduce using rule 89 (expression)


State 88

   80 expression: expression . NULLCOALESCING expression
   81           | expression . '?' expression ':' expression
   82           | expression . LOGAND expression
   83           | expression . LOGOR expression
   84           | expression . EXPGT expression
   85           | expression . EXPLT expression
   86           | expression . EXPEQ expression
   87           | expression . EXPDF expression
   88           | expression . '<' expression
   88           | expression '<' expression .
   89           | expression . '>' expression
   90           | expression . '+' expression
   91           | expression . '-' expression
   92           | expression . '*' expression
   93           | expression . '/' expression

    '-'  shift, and go to state 57
    '+'  shift, and go to state 58
    '*'  shift, and go to state 59
    '/'  shift, and go to state 60

    $default  reduce using rule 88 (expression)


State 89

   80 expression: expression . NULLCOALESCING expression
   81           | expression . '?' expression ':' expression
   82           | expression . LOGAND expression
   83           | expression . LOGOR expression
   84           | expression . EXPGT expression
   85           | expression . EXPLT expression
   86           | expression . EXPEQ expression
   87           | expression . EXPDF expression
   88           | expression . '<' expression
   89           | expression . '>' expression
   90           | expression . '+' expression
   91           | expression . '-' expression
   91           | expression '-' expression .
   92           | expression . '*' expression
   93           | expression . '/' expression

    '*'  shift, and go to state 59
    '/'  shift, and go to state 60

    $default  reduce using rule 91 (expression)


State 90

   80 expression: expression . NULLCOALESCING expression
   81           | expression . '?' expression ':' expression
   82           | expression . LOGAND expression
   83           | expression . LOGOR expression
   84           | expression . EXPGT expression
   85           | expression . EXPLT expression
   86           | expression . EXPEQ expression
   87           | expression . EXPDF expression
   88           | expression . '<' expression
   89           | expression . '>' expression
   90           | expression . '+' expression
   90           | expression '+' expression .
   91           | expression . '-' expression
   92           | expression . '*' expression
   93           | expression . '/' expression

    '*'  shift, and go to state 59
    '/'  shift, and go to state 60

    $default  reduce using rule 90 (expression)


State 91

   80 expression: expression . NULLCOALESCING expression
   81           | expression . '?' expression ':' expression
   82           | expression . LOGAND expression
   83           | expression . LOGOR expression
   84           | expression . EXPGT expression
   85           | expression . EXPLT expression
   86           | expression . EXPEQ expression
   87           | expression . EXPDF expression
   88           | expression . '<' expression
   89           | expression . '>' expression
   90           | expression . '+' expression
   91           | expression . '-' expression
   92           | expression . '*' expression
   92           | expression '*' expression .
   93           | expression . '/' expression

    $default  reduce using rule 92 (expression)


State 92

   80 expression: expression . NULLCOALESCING expression
   81           | expression . '?' expression ':' expression
   82           | expression . LOGAND expression
   83           | expression . LOGOR expression
   84           | expression . EXPGT expression
   85           | expression . EXPLT expression
   86           | expression . EXPEQ expression
   87           | expression . EXPDF expression
   88           | expression . '<' expression
   89           | expression . '>' expression
   90           | expression . '+' expression
   91           | expression . '-' expression
   92           | expression . '*' expression
   93           | expression . '/' expression
   93           | expression '/' expression .

    $default  reduce using rule 93 (expression)


State 93

   27 declarations: DLET IDENTIFIER ASSGNOP expression .
   80 expression: expression . NULLCOALESCING expression
   81           | expression . '?' expression ':' expression
   82           | expression . LOGAND expression
   83           | expression . LOGOR expression
   84           | expression . EXPGT expression
   85           | expression . EXPLT expression
   86           | expression . EXPEQ expression
   87           | expression . EXPDF expression
   88           | expression . '<' expression
   89           | expression . '>' expression
   90           | expression . '+' expression
   91           | expression . '-' expression
   92           | expression . '*' expression
   93           | expression . '/' expression

    EXPGT           shift, and go to state 47
    EXPLT           shift, and go to state 48
    EXPEQ           shift, and go to state 49
    EXPDF           shift, and go to state 50
    NULLCOALESCING  shift, and go to state 51
    LOGOR           shift, and go to state 52
    LOGAND          shift, and go to state 53
    '?'             shift, and go to state 54
    '>'             shift, and go to state 55
    '<'             shift, and go to state 56
    '-'             shift, and go to state 57
    '+'             shift, and go to state 58
    '*'             shift, and go to state 59
    '/'             shift, and go to state 60

    $default  reduce using rule 27 (declarations)


State 94

   31 declarations: DCONST IDENTIFIER ASSGNOP $@5 . anonymFunction

    DFUNC  shift, and go to state 110
    '('    shift, and go to state 111

    anonymFunction  go to state 112


State 95

   29 declarations: DCONST IDENTIFIER ASSGNOP expression .
   80 expression: expression . NULLCOALESCING expression
   81           | expression . '?' expression ':' expression
   82           | expression . LOGAND expression
   83           | expression . LOGOR expression
   84           | expression . EXPGT expression
   85           | expression . EXPLT expression
   86           | expression . EXPEQ expression
   87           | expression . EXPDF expression
   88           | expression . '<' expression
   89           | expression . '>' expression
   90           | expression . '+' expression
   91           | expression . '-' expression
   92           | expression . '*' expression
   93           | expression . '/' expression

    EXPGT           shift, and go to state 47
    EXPLT           shift, and go to state 48
    EXPEQ           shift, and go to state 49
    EXPDF           shift, and go to state 50
    NULLCOALESCING  shift, and go to state 51
    LOGOR           shift, and go to state 52
    LOGAND          shift, and go to state 53
    '?'             shift, and go to state 54
    '>'             shift, and go to state 55
    '<'             shift, and go to state 56
    '-'             shift, and go to state 57
    '+'             shift, and go to state 58
    '*'             shift, and go to state 59
    '/'             shift, and go to state 60

    $default  reduce using rule 29 (declarations)


State 96

   28 declarations: DVAR IDENTIFIER ASSGNOP expression .
   80 expression: expression . NULLCOALESCING expression
   81           | expression . '?' expression ':' expression
   82           | expression . LOGAND expression
   83           | expression . LOGOR expression
   84           | expression . EXPGT expression
   85           | expression . EXPLT expression
   86           | expression . EXPEQ expression
   87           | expression . EXPDF expression
   88           | expression . '<' expression
   89           | expression . '>' expression
   90           | expression . '+' expression
   91           | expression . '-' expression
   92           | expression . '*' expression
   93           | expression . '/' expression

    EXPGT           shift, and go to state 47
    EXPLT           shift, and go to state 48
    EXPEQ           shift, and go to state 49
    EXPDF           shift, and go to state 50
    NULLCOALESCING  shift, and go to state 51
    LOGOR           shift, and go to state 52
    LOGAND          shift, and go to state 53
    '?'             shift, and go to state 54
    '>'             shift, and go to state 55
    '<'             shift, and go to state 56
    '-'             shift, and go to state 57
    '+'             shift, and go to state 58
    '*'             shift, and go to state 59
    '/'             shift, and go to state 60

    $default  reduce using rule 28 (declarations)


State 97

   34 declarations: DFUNC IDENTIFIER '(' $@6 . funcParamsNull ')' '{' $@7 program '}'

    IDENTIFIER  shift, and go to state 113

    $default  reduce using rule 42 (funcParamsNull)

    assigns         go to state 114
    funcParamsNull  go to state 115
    funcParams      go to state 116


State 98

   36 assigns: IDENTIFIER '[' arr_values ']' . ASSGNOP expression
   70 arr_index: IDENTIFIER '[' arr_values ']' .

    ASSGNOP  shift, and go to state 117

    $default  reduce using rule 70 (arr_index)


State 99

   55 funcArgsNull: ',' funcArgsNull .

    $default  reduce using rule 55 (funcArgsNull)


State 100

   77 expression: IDENTIFIER '(' funcArgsNull ')' .

    $default  reduce using rule 77 (expression)


State 101

   54 funcArgsNull: expression ',' . funcArgsNull

    VSTR        shift, and go to state 5
    VINT        shift, and go to state 6
    VBOOL       shift, and go to state 7
    VFLOAT      shift, and go to state 8
    IDENTIFIER  shift, and go to state 36
    '['         shift, and go to state 16
    ','         shift, and go to state 67

    $default  reduce using rule 52 (funcArgsNull)

    funcArgsNull    go to state 118
    arr_expression  go to state 25
    arr_index       go to state 26
    expression      go to state 69


State 102

   58 conditional: CIF '(' expression ')' . '{' $@15 program $@16 '}' conditionalElse

    '{'  shift, and go to state 119


State 103

   70 arr_index: IDENTIFIER '[' arr_values . ']'

    ']'  shift, and go to state 120


State 104

   20 loop: LFOR '(' DLET IDENTIFIER . LOF IDENTIFIER ')' '{' $@2 program '}'
   22     | LFOR '(' DLET IDENTIFIER . LOF arr_expression ')' '{' $@3 program '}'
   25 declarations: DLET IDENTIFIER .
   27             | DLET IDENTIFIER . ASSGNOP expression

    ASSGNOP  shift, and go to state 61
    LOF      shift, and go to state 121

    $default  reduce using rule 25 (declarations)


State 105

   18 loop: LFOR '(' declarations SEMICOLON . expression SEMICOLON assigns ')' '{' $@1 program '}'

    VSTR        shift, and go to state 5
    VINT        shift, and go to state 6
    VBOOL       shift, and go to state 7
    VFLOAT      shift, and go to state 8
    IDENTIFIER  shift, and go to state 36
    '['         shift, and go to state 16

    arr_expression  go to state 25
    arr_index       go to state 26
    expression      go to state 122


State 106

   24 loop: LWHILE '(' expression ')' . '{' $@4 program '}'

    '{'  shift, and go to state 123


State 107

   69 arr_values: expression ',' arr_values .

    $default  reduce using rule 69 (arr_values)


State 108

   71 arr_index: arr_expression '[' arr_values ']' .

    $default  reduce using rule 71 (arr_index)


State 109

   81 expression: expression '?' expression ':' . expression

    VSTR        shift, and go to state 5
    VINT        shift, and go to state 6
    VBOOL       shift, and go to state 7
    VFLOAT      shift, and go to state 8
    IDENTIFIER  shift, and go to state 36
    '['         shift, and go to state 16

    arr_expression  go to state 25
    arr_index       go to state 26
    expression      go to state 124


State 110

   39 anonymFunction: DFUNC . '(' $@8 funcParamsNull ')' '{' $@9 program '}'

    '('  shift, and go to state 125


State 111

   41 anonymFunction: '(' . funcParamsNull ')' DAFUNC '{' $@10 program '}'

    IDENTIFIER  shift, and go to state 113

    $default  reduce using rule 42 (funcParamsNull)

    assigns         go to state 114
    funcParamsNull  go to state 126
    funcParams      go to state 116


State 112

   31 declarations: DCONST IDENTIFIER ASSGNOP $@5 anonymFunction .

    $default  reduce using rule 31 (declarations)


State 113

   35 assigns: IDENTIFIER . ASSGNOP expression
   36        | IDENTIFIER . '[' arr_values ']' ASSGNOP expression
   44 funcParams: IDENTIFIER .
   48           | IDENTIFIER . $@11 ',' $@12 funcParams

    ASSGNOP  shift, and go to state 32
    '['      shift, and go to state 127

    ','       reduce using rule 46 ($@11)
    $default  reduce using rule 44 (funcParams)

    $@11  go to state 128


State 114

   45 funcParams: assigns .
   51           | assigns . $@13 ',' $@14 funcParams

    ','       reduce using rule 49 ($@13)
    $default  reduce using rule 45 (funcParams)

    $@13  go to state 129


State 115

   34 declarations: DFUNC IDENTIFIER '(' $@6 funcParamsNull . ')' '{' $@7 program '}'

    ')'  shift, and go to state 130


State 116

   43 funcParamsNull: funcParams .

    $default  reduce using rule 43 (funcParamsNull)


State 117

   36 assigns: IDENTIFIER '[' arr_values ']' ASSGNOP . expression

    VSTR        shift, and go to state 5
    VINT        shift, and go to state 6
    VBOOL       shift, and go to state 7
    VFLOAT      shift, and go to state 8
    IDENTIFIER  shift, and go to state 36
    '['         shift, and go to state 16

    arr_expression  go to state 25
    arr_index       go to state 26
    expression      go to state 131


State 118

   54 funcArgsNull: expression ',' funcArgsNull .

    $default  reduce using rule 54 (funcArgsNull)


State 119

   58 conditional: CIF '(' expression ')' '{' . $@15 program $@16 '}' conditionalElse

    $default  reduce using rule 56 ($@15)

    $@15  go to state 132


State 120

   70 arr_index: IDENTIFIER '[' arr_values ']' .

    $default  reduce using rule 70 (arr_index)


State 121

   20 loop: LFOR '(' DLET IDENTIFIER LOF . IDENTIFIER ')' '{' $@2 program '}'
   22     | LFOR '(' DLET IDENTIFIER LOF . arr_expression ')' '{' $@3 program '}'

    IDENTIFIER  shift, and go to state 133
    '['         shift, and go to state 16

    arr_expression  go to state 134


State 122

   18 loop: LFOR '(' declarations SEMICOLON expression . SEMICOLON assigns ')' '{' $@1 program '}'
   80 expression: expression . NULLCOALESCING expression
   81           | expression . '?' expression ':' expression
   82           | expression . LOGAND expression
   83           | expression . LOGOR expression
   84           | expression . EXPGT expression
   85           | expression . EXPLT expression
   86           | expression . EXPEQ expression
   87           | expression . EXPDF expression
   88           | expression . '<' expression
   89           | expression . '>' expression
   90           | expression . '+' expression
   91           | expression . '-' expression
   92           | expression . '*' expression
   93           | expression . '/' expression

    EXPGT           shift, and go to state 47
    EXPLT           shift, and go to state 48
    EXPEQ           shift, and go to state 49
    EXPDF           shift, and go to state 50
    NULLCOALESCING  shift, and go to state 51
    LOGOR           shift, and go to state 52
    LOGAND          shift, and go to state 53
    SEMICOLON       shift, and go to state 135
    '?'             shift, and go to state 54
    '>'             shift, and go to state 55
    '<'             shift, and go to state 56
    '-'             shift, and go to state 57
    '+'             shift, and go to state 58
    '*'             shift, and go to state 59
    '/'             shift, and go to state 60


State 123

   24 loop: LWHILE '(' expression ')' '{' . $@4 program '}'

    $default  reduce using rule 23 ($@4)

    $@4  go to state 136


State 124

   80 expression: expression . NULLCOALESCING expression
   81           | expression . '?' expression ':' expression
   81           | expression '?' expression ':' expression .
   82           | expression . LOGAND expression
   83           | expression . LOGOR expression
   84           | expression . EXPGT expression
   85           | expression . EXPLT expression
   86           | expression . EXPEQ expression
   87           | expression . EXPDF expression
   88           | expression . '<' expression
   89           | expression . '>' expression
   90           | expression . '+' expression
   91           | expression . '-' expression
   92           | expression . '*' expression
   93           | expression . '/' expression

    EXPGT  shift, and go to state 47
    EXPLT  shift, and go to state 48
    EXPEQ  shift, and go to state 49
    EXPDF  shift, and go to state 50
    '>'    shift, and go to state 55
    '<'    shift, and go to state 56
    '-'    shift, and go to state 57
    '+'    shift, and go to state 58
    '*'    shift, and go to state 59
    '/'    shift, and go to state 60

    $default  reduce using rule 81 (expression)


State 125

   39 anonymFunction: DFUNC '(' . $@8 funcParamsNull ')' '{' $@9 program '}'

    $default  reduce using rule 37 ($@8)

    $@8  go to state 137


State 126

   41 anonymFunction: '(' funcParamsNull . ')' DAFUNC '{' $@10 program '}'

    ')'  shift, and go to state 138


State 127

   36 assigns: IDENTIFIER '[' . arr_values ']' ASSGNOP expression

    VSTR        shift, and go to state 5
    VINT        shift, and go to state 6
    VBOOL       shift, and go to state 7
    VFLOAT      shift, and go to state 8
    IDENTIFIER  shift, and go to state 36
    '['         shift, and go to state 16

    arr_expression  go to state 25
    arr_values      go to state 139
    arr_index       go to state 26
    expression      go to state 42


State 128

   48 funcParams: IDENTIFIER $@11 . ',' $@12 funcParams

    ','  shift, and go to state 140


State 129

   51 funcParams: assigns $@13 . ',' $@14 funcParams

    ','  shift, and go to state 141


State 130

   34 declarations: DFUNC IDENTIFIER '(' $@6 funcParamsNull ')' . '{' $@7 program '}'

    '{'  shift, and go to state 142


State 131

   36 assigns: IDENTIFIER '[' arr_values ']' ASSGNOP expression .
   80 expression: expression . NULLCOALESCING expression
   81           | expression . '?' expression ':' expression
   82           | expression . LOGAND expression
   83           | expression . LOGOR expression
   84           | expression . EXPGT expression
   85           | expression . EXPLT expression
   86           | expression . EXPEQ expression
   87           | expression . EXPDF expression
   88           | expression . '<' expression
   89           | expression . '>' expression
   90           | expression . '+' expression
   91           | expression . '-' expression
   92           | expression . '*' expression
   93           | expression . '/' expression

    EXPGT           shift, and go to state 47
    EXPLT           shift, and go to state 48
    EXPEQ           shift, and go to state 49
    EXPDF           shift, and go to state 50
    NULLCOALESCING  shift, and go to state 51
    LOGOR           shift, and go to state 52
    LOGAND          shift, and go to state 53
    '?'             shift, and go to state 54
    '>'             shift, and go to state 55
    '<'             shift, and go to state 56
    '-'             shift, and go to state 57
    '+'             shift, and go to state 58
    '*'             shift, and go to state 59
    '/'             shift, and go to state 60

    $default  reduce using rule 36 (assigns)


State 132

   58 conditional: CIF '(' expression ')' '{' $@15 . program $@16 '}' conditionalElse

    DLET        shift, and go to state 1
    DCONST      shift, and go to state 2
    DVAR        shift, and go to state 3
    DFUNC       shift, and go to state 4
    VSTR        shift, and go to state 5
    VINT        shift, and go to state 6
    VBOOL       shift, and go to state 7
    VFLOAT      shift, and go to state 8
    IDENTIFIER  shift, and go to state 9
    CIF         shift, and go to state 10
    FRETURN     shift, and go to state 11
    FBREAK      shift, and go to state 12
    FCONTINUE   shift, and go to state 13
    LFOR        shift, and go to state 14
    LWHILE      shift, and go to state 15
    '['         shift, and go to state 16

    program         go to state 143
    statement       go to state 19
    flow            go to state 20
    loop            go to state 21
    declarations    go to state 22
    assigns         go to state 23
    conditional     go to state 24
    arr_expression  go to state 25
    arr_index       go to state 26
    expression      go to state 27


State 133

   20 loop: LFOR '(' DLET IDENTIFIER LOF IDENTIFIER . ')' '{' $@2 program '}'

    ')'  shift, and go to state 144


State 134

   22 loop: LFOR '(' DLET IDENTIFIER LOF arr_expression . ')' '{' $@3 program '}'

    ')'  shift, and go to state 145


State 135

   18 loop: LFOR '(' declarations SEMICOLON expression SEMICOLON . assigns ')' '{' $@1 program '}'

    IDENTIFIER  shift, and go to state 146

    assigns  go to state 147


State 136

   24 loop: LWHILE '(' expression ')' '{' $@4 . program '}'

    DLET        shift, and go to state 1
    DCONST      shift, and go to state 2
    DVAR        shift, and go to state 3
    DFUNC       shift, and go to state 4
    VSTR        shift, and go to state 5
    VINT        shift, and go to state 6
    VBOOL       shift, and go to state 7
    VFLOAT      shift, and go to state 8
    IDENTIFIER  shift, and go to state 9
    CIF         shift, and go to state 10
    FRETURN     shift, and go to state 11
    FBREAK      shift, and go to state 12
    FCONTINUE   shift, and go to state 13
    LFOR        shift, and go to state 14
    LWHILE      shift, and go to state 15
    '['         shift, and go to state 16

    program         go to state 148
    statement       go to state 19
    flow            go to state 20
    loop            go to state 21
    declarations    go to state 22
    assigns         go to state 23
    conditional     go to state 24
    arr_expression  go to state 25
    arr_index       go to state 26
    expression      go to state 27


State 137

   39 anonymFunction: DFUNC '(' $@8 . funcParamsNull ')' '{' $@9 program '}'

    IDENTIFIER  shift, and go to state 113

    $default  reduce using rule 42 (funcParamsNull)

    assigns         go to state 114
    funcParamsNull  go to state 149
    funcParams      go to state 116


State 138

   41 anonymFunction: '(' funcParamsNull ')' . DAFUNC '{' $@10 program '}'

    DAFUNC  shift, and go to state 150


State 139

   36 assigns: IDENTIFIER '[' arr_values . ']' ASSGNOP expression

    ']'  shift, and go to state 151


State 140

   48 funcParams: IDENTIFIER $@11 ',' . $@12 funcParams

    $default  reduce using rule 47 ($@12)

    $@12  go to state 152


State 141

   51 funcParams: assigns $@13 ',' . $@14 funcParams

    $default  reduce using rule 50 ($@14)

    $@14  go to state 153


State 142

   34 declarations: DFUNC IDENTIFIER '(' $@6 funcParamsNull ')' '{' . $@7 program '}'

    $default  reduce using rule 33 ($@7)

    $@7  go to state 154


State 143

   58 conditional: CIF '(' expression ')' '{' $@15 program . $@16 '}' conditionalElse

    $default  reduce using rule 57 ($@16)

    $@16  go to state 155


State 144

   20 loop: LFOR '(' DLET IDENTIFIER LOF IDENTIFIER ')' . '{' $@2 program '}'

    '{'  shift, and go to state 156


State 145

   22 loop: LFOR '(' DLET IDENTIFIER LOF arr_expression ')' . '{' $@3 program '}'

    '{'  shift, and go to state 157


State 146

   35 assigns: IDENTIFIER . ASSGNOP expression
   36        | IDENTIFIER . '[' arr_values ']' ASSGNOP expression

    ASSGNOP  shift, and go to state 32
    '['      shift, and go to state 127


State 147

   18 loop: LFOR '(' declarations SEMICOLON expression SEMICOLON assigns . ')' '{' $@1 program '}'

    ')'  shift, and go to state 158


State 148

   24 loop: LWHILE '(' expression ')' '{' $@4 program . '}'

    '}'  shift, and go to state 159


State 149

   39 anonymFunction: DFUNC '(' $@8 funcParamsNull . ')' '{' $@9 program '}'

    ')'  shift, and go to state 160


State 150

   41 anonymFunction: '(' funcParamsNull ')' DAFUNC . '{' $@10 program '}'

    '{'  shift, and go to state 161


State 151

   36 assigns: IDENTIFIER '[' arr_values ']' . ASSGNOP expression

    ASSGNOP  shift, and go to state 117


State 152

   48 funcParams: IDENTIFIER $@11 ',' $@12 . funcParams

    IDENTIFIER  shift, and go to state 113

    assigns     go to state 114
    funcParams  go to state 162


State 153

   51 funcParams: assigns $@13 ',' $@14 . funcParams

    IDENTIFIER  shift, and go to state 113

    assigns     go to state 114
    funcParams  go to state 163


State 154

   34 declarations: DFUNC IDENTIFIER '(' $@6 funcParamsNull ')' '{' $@7 . program '}'

    DLET        shift, and go to state 1
    DCONST      shift, and go to state 2
    DVAR        shift, and go to state 3
    DFUNC       shift, and go to state 4
    VSTR        shift, and go to state 5
    VINT        shift, and go to state 6
    VBOOL       shift, and go to state 7
    VFLOAT      shift, and go to state 8
    IDENTIFIER  shift, and go to state 9
    CIF         shift, and go to state 10
    FRETURN     shift, and go to state 11
    FBREAK      shift, and go to state 12
    FCONTINUE   shift, and go to state 13
    LFOR        shift, and go to state 14
    LWHILE      shift, and go to state 15
    '['         shift, and go to state 16

    program         go to state 164
    statement       go to state 19
    flow            go to state 20
    loop            go to state 21
    declarations    go to state 22
    assigns         go to state 23
    conditional     go to state 24
    arr_expression  go to state 25
    arr_index       go to state 26
    expression      go to state 27


State 155

   58 conditional: CIF '(' expression ')' '{' $@15 program $@16 . '}' conditionalElse

    '}'  shift, and go to state 165


State 156

   20 loop: LFOR '(' DLET IDENTIFIER LOF IDENTIFIER ')' '{' . $@2 program '}'

    $default  reduce using rule 19 ($@2)

    $@2  go to state 166


State 157

   22 loop: LFOR '(' DLET IDENTIFIER LOF arr_expression ')' '{' . $@3 program '}'

    $default  reduce using rule 21 ($@3)

    $@3  go to state 167


State 158

   18 loop: LFOR '(' declarations SEMICOLON expression SEMICOLON assigns ')' . '{' $@1 program '}'

    '{'  shift, and go to state 168


State 159

   24 loop: LWHILE '(' expression ')' '{' $@4 program '}' .

    $default  reduce using rule 24 (loop)


State 160

   39 anonymFunction: DFUNC '(' $@8 funcParamsNull ')' . '{' $@9 program '}'

    '{'  shift, and go to state 169


State 161

   41 anonymFunction: '(' funcParamsNull ')' DAFUNC '{' . $@10 program '}'

    $default  reduce using rule 40 ($@10)

    $@10  go to state 170


State 162

   48 funcParams: IDENTIFIER $@11 ',' $@12 funcParams .

    $default  reduce using rule 48 (funcParams)


State 163

   51 funcParams: assigns $@13 ',' $@14 funcParams .

    $default  reduce using rule 51 (funcParams)


State 164

   34 declarations: DFUNC IDENTIFIER '(' $@6 funcParamsNull ')' '{' $@7 program . '}'

    '}'  shift, and go to state 171


State 165

   58 conditional: CIF '(' expression ')' '{' $@15 program $@16 '}' . conditionalElse

    CELSE  shift, and go to state 172

    $default  reduce using rule 59 (conditionalElse)

    conditionalElse  go to state 173


State 166

   20 loop: LFOR '(' DLET IDENTIFIER LOF IDENTIFIER ')' '{' $@2 . program '}'

    DLET        shift, and go to state 1
    DCONST      shift, and go to state 2
    DVAR        shift, and go to state 3
    DFUNC       shift, and go to state 4
    VSTR        shift, and go to state 5
    VINT        shift, and go to state 6
    VBOOL       shift, and go to state 7
    VFLOAT      shift, and go to state 8
    IDENTIFIER  shift, and go to state 9
    CIF         shift, and go to state 10
    FRETURN     shift, and go to state 11
    FBREAK      shift, and go to state 12
    FCONTINUE   shift, and go to state 13
    LFOR        shift, and go to state 14
    LWHILE      shift, and go to state 15
    '['         shift, and go to state 16

    program         go to state 174
    statement       go to state 19
    flow            go to state 20
    loop            go to state 21
    declarations    go to state 22
    assigns         go to state 23
    conditional     go to state 24
    arr_expression  go to state 25
    arr_index       go to state 26
    expression      go to state 27


State 167

   22 loop: LFOR '(' DLET IDENTIFIER LOF arr_expression ')' '{' $@3 . program '}'

    DLET        shift, and go to state 1
    DCONST      shift, and go to state 2
    DVAR        shift, and go to state 3
    DFUNC       shift, and go to state 4
    VSTR        shift, and go to state 5
    VINT        shift, and go to state 6
    VBOOL       shift, and go to state 7
    VFLOAT      shift, and go to state 8
    IDENTIFIER  shift, and go to state 9
    CIF         shift, and go to state 10
    FRETURN     shift, and go to state 11
    FBREAK      shift, and go to state 12
    FCONTINUE   shift, and go to state 13
    LFOR        shift, and go to state 14
    LWHILE      shift, and go to state 15
    '['         shift, and go to state 16

    program         go to state 175
    statement       go to state 19
    flow            go to state 20
    loop            go to state 21
    declarations    go to state 22
    assigns         go to state 23
    conditional     go to state 24
    arr_expression  go to state 25
    arr_index       go to state 26
    expression      go to state 27


State 168

   18 loop: LFOR '(' declarations SEMICOLON expression SEMICOLON assigns ')' '{' . $@1 program '}'

    $default  reduce using rule 17 ($@1)

    $@1  go to state 176


State 169

   39 anonymFunction: DFUNC '(' $@8 funcParamsNull ')' '{' . $@9 program '}'

    $default  reduce using rule 38 ($@9)

    $@9  go to state 177


State 170

   41 anonymFunction: '(' funcParamsNull ')' DAFUNC '{' $@10 . program '}'

    DLET        shift, and go to state 1
    DCONST      shift, and go to state 2
    DVAR        shift, and go to state 3
    DFUNC       shift, and go to state 4
    VSTR        shift, and go to state 5
    VINT        shift, and go to state 6
    VBOOL       shift, and go to state 7
    VFLOAT      shift, and go to state 8
    IDENTIFIER  shift, and go to state 9
    CIF         shift, and go to state 10
    FRETURN     shift, and go to state 11
    FBREAK      shift, and go to state 12
    FCONTINUE   shift, and go to state 13
    LFOR        shift, and go to state 14
    LWHILE      shift, and go to state 15
    '['         shift, and go to state 16

    program         go to state 178
    statement       go to state 19
    flow            go to state 20
    loop            go to state 21
    declarations    go to state 22
    assigns         go to state 23
    conditional     go to state 24
    arr_expression  go to state 25
    arr_index       go to state 26
    expression      go to state 27


State 171

   34 declarations: DFUNC IDENTIFIER '(' $@6 funcParamsNull ')' '{' $@7 program '}' .

    $default  reduce using rule 34 (declarations)


State 172

   62 conditionalElse: CELSE . '{' $@17 program $@18 '}'
   65                | CELSE . CIF '(' expression ')' '{' $@19 program $@20 '}' conditionalElse

    CIF  shift, and go to state 179
    '{'  shift, and go to state 180


State 173

   58 conditional: CIF '(' expression ')' '{' $@15 program $@16 '}' conditionalElse .

    $default  reduce using rule 58 (conditional)


State 174

   20 loop: LFOR '(' DLET IDENTIFIER LOF IDENTIFIER ')' '{' $@2 program . '}'

    '}'  shift, and go to state 181


State 175

   22 loop: LFOR '(' DLET IDENTIFIER LOF arr_expression ')' '{' $@3 program . '}'

    '}'  shift, and go to state 182


State 176

   18 loop: LFOR '(' declarations SEMICOLON expression SEMICOLON assigns ')' '{' $@1 . program '}'

    DLET        shift, and go to state 1
    DCONST      shift, and go to state 2
    DVAR        shift, and go to state 3
    DFUNC       shift, and go to state 4
    VSTR        shift, and go to state 5
    VINT        shift, and go to state 6
    VBOOL       shift, and go to state 7
    VFLOAT      shift, and go to state 8
    IDENTIFIER  shift, and go to state 9
    CIF         shift, and go to state 10
    FRETURN     shift, and go to state 11
    FBREAK      shift, and go to state 12
    FCONTINUE   shift, and go to state 13
    LFOR        shift, and go to state 14
    LWHILE      shift, and go to state 15
    '['         shift, and go to state 16

    program         go to state 183
    statement       go to state 19
    flow            go to state 20
    loop            go to state 21
    declarations    go to state 22
    assigns         go to state 23
    conditional     go to state 24
    arr_expression  go to state 25
    arr_index       go to state 26
    expression      go to state 27


State 177

   39 anonymFunction: DFUNC '(' $@8 funcParamsNull ')' '{' $@9 . program '}'

    DLET        shift, and go to state 1
    DCONST      shift, and go to state 2
    DVAR        shift, and go to state 3
    DFUNC       shift, and go to state 4
    VSTR        shift, and go to state 5
    VINT        shift, and go to state 6
    VBOOL       shift, and go to state 7
    VFLOAT      shift, and go to state 8
    IDENTIFIER  shift, and go to state 9
    CIF         shift, and go to state 10
    FRETURN     shift, and go to state 11
    FBREAK      shift, and go to state 12
    FCONTINUE   shift, and go to state 13
    LFOR        shift, and go to state 14
    LWHILE      shift, and go to state 15
    '['         shift, and go to state 16

    program         go to state 184
    statement       go to state 19
    flow            go to state 20
    loop            go to state 21
    declarations    go to state 22
    assigns         go to state 23
    conditional     go to state 24
    arr_expression  go to state 25
    arr_index       go to state 26
    expression      go to state 27


State 178

   41 anonymFunction: '(' funcParamsNull ')' DAFUNC '{' $@10 program . '}'

    '}'  shift, and go to state 185


State 179

   65 conditionalElse: CELSE CIF . '(' expression ')' '{' $@19 program $@20 '}' conditionalElse

    '('  shift, and go to state 186


State 180

   62 conditionalElse: CELSE '{' . $@17 program $@18 '}'

    $default  reduce using rule 60 ($@17)

    $@17  go to state 187


State 181

   20 loop: LFOR '(' DLET IDENTIFIER LOF IDENTIFIER ')' '{' $@2 program '}' .

    $default  reduce using rule 20 (loop)


State 182

   22 loop: LFOR '(' DLET IDENTIFIER LOF arr_expression ')' '{' $@3 program '}' .

    $default  reduce using rule 22 (loop)


State 183

   18 loop: LFOR '(' declarations SEMICOLON expression SEMICOLON assigns ')' '{' $@1 program . '}'

    '}'  shift, and go to state 188


State 184

   39 anonymFunction: DFUNC '(' $@8 funcParamsNull ')' '{' $@9 program . '}'

    '}'  shift, and go to state 189


State 185

   41 anonymFunction: '(' funcParamsNull ')' DAFUNC '{' $@10 program '}' .

    $default  reduce using rule 41 (anonymFunction)


State 186

   65 conditionalElse: CELSE CIF '(' . expression ')' '{' $@19 program $@20 '}' conditionalElse

    VSTR        shift, and go to state 5
    VINT        shift, and go to state 6
    VBOOL       shift, and go to state 7
    VFLOAT      shift, and go to state 8
    IDENTIFIER  shift, and go to state 36
    '['         shift, and go to state 16

    arr_expression  go to state 25
    arr_index       go to state 26
    expression      go to state 190


State 187

   62 conditionalElse: CELSE '{' $@17 . program $@18 '}'

    DLET        shift, and go to state 1
    DCONST      shift, and go to state 2
    DVAR        shift, and go to state 3
    DFUNC       shift, and go to state 4
    VSTR        shift, and go to state 5
    VINT        shift, and go to state 6
    VBOOL       shift, and go to state 7
    VFLOAT      shift, and go to state 8
    IDENTIFIER  shift, and go to state 9
    CIF         shift, and go to state 10
    FRETURN     shift, and go to state 11
    FBREAK      shift, and go to state 12
    FCONTINUE   shift, and go to state 13
    LFOR        shift, and go to state 14
    LWHILE      shift, and go to state 15
    '['         shift, and go to state 16

    program         go to state 191
    statement       go to state 19
    flow            go to state 20
    loop            go to state 21
    declarations    go to state 22
    assigns         go to state 23
    conditional     go to state 24
    arr_expression  go to state 25
    arr_index       go to state 26
    expression      go to state 27


State 188

   18 loop: LFOR '(' declarations SEMICOLON expression SEMICOLON assigns ')' '{' $@1 program '}' .

    $default  reduce using rule 18 (loop)


State 189

   39 anonymFunction: DFUNC '(' $@8 funcParamsNull ')' '{' $@9 program '}' .

    $default  reduce using rule 39 (anonymFunction)


State 190

   65 conditionalElse: CELSE CIF '(' expression . ')' '{' $@19 program $@20 '}' conditionalElse
   80 expression: expression . NULLCOALESCING expression
   81           | expression . '?' expression ':' expression
   82           | expression . LOGAND expression
   83           | expression . LOGOR expression
   84           | expression . EXPGT expression
   85           | expression . EXPLT expression
   86           | expression . EXPEQ expression
   87           | expression . EXPDF expression
   88           | expression . '<' expression
   89           | expression . '>' expression
   90           | expression . '+' expression
   91           | expression . '-' expression
   92           | expression . '*' expression
   93           | expression . '/' expression

    EXPGT           shift, and go to state 47
    EXPLT           shift, and go to state 48
    EXPEQ           shift, and go to state 49
    EXPDF           shift, and go to state 50
    NULLCOALESCING  shift, and go to state 51
    LOGOR           shift, and go to state 52
    LOGAND          shift, and go to state 53
    '?'             shift, and go to state 54
    '>'             shift, and go to state 55
    '<'             shift, and go to state 56
    '-'             shift, and go to state 57
    '+'             shift, and go to state 58
    '*'             shift, and go to state 59
    '/'             shift, and go to state 60
    ')'             shift, and go to state 192


State 191

   62 conditionalElse: CELSE '{' $@17 program . $@18 '}'

    $default  reduce using rule 61 ($@18)

    $@18  go to state 193


State 192

   65 conditionalElse: CELSE CIF '(' expression ')' . '{' $@19 program $@20 '}' conditionalElse

    '{'  shift, and go to state 194


State 193

   62 conditionalElse: CELSE '{' $@17 program $@18 . '}'

    '}'  shift, and go to state 195


State 194

   65 conditionalElse: CELSE CIF '(' expression ')' '{' . $@19 program $@20 '}' conditionalElse

    $default  reduce using rule 63 ($@19)

    $@19  go to state 196


State 195

   62 conditionalElse: CELSE '{' $@17 program $@18 '}' .

    $default  reduce using rule 62 (conditionalElse)


State 196

   65 conditionalElse: CELSE CIF '(' expression ')' '{' $@19 . program $@20 '}' conditionalElse

    DLET        shift, and go to state 1
    DCONST      shift, and go to state 2
    DVAR        shift, and go to state 3
    DFUNC       shift, and go to state 4
    VSTR        shift, and go to state 5
    VINT        shift, and go to state 6
    VBOOL       shift, and go to state 7
    VFLOAT      shift, and go to state 8
    IDENTIFIER  shift, and go to state 9
    CIF         shift, and go to state 10
    FRETURN     shift, and go to state 11
    FBREAK      shift, and go to state 12
    FCONTINUE   shift, and go to state 13
    LFOR        shift, and go to state 14
    LWHILE      shift, and go to state 15
    '['         shift, and go to state 16

    program         go to state 197
    statement       go to state 19
    flow            go to state 20
    loop            go to state 21
    declarations    go to state 22
    assigns         go to state 23
    conditional     go to state 24
    arr_expression  go to state 25
    arr_index       go to state 26
    expression      go to state 27


State 197

   65 conditionalElse: CELSE CIF '(' expression ')' '{' $@19 program . $@20 '}' conditionalElse

    $default  reduce using rule 64 ($@20)

    $@20  go to state 198


State 198

   65 conditionalElse: CELSE CIF '(' expression ')' '{' $@19 program $@20 . '}' conditionalElse

    '}'  shift, and go to state 199


State 199

   65 conditionalElse: CELSE CIF '(' expression ')' '{' $@19 program $@20 '}' . conditionalElse

    CELSE  shift, and go to state 172

    $default  reduce using rule 59 (conditionalElse)

    conditionalElse  go to state 200


State 200

   65 conditionalElse: CELSE CIF '(' expression ')' '{' $@19 program $@20 '}' conditionalElse .

    $default  reduce using rule 65 (conditionalElse)
